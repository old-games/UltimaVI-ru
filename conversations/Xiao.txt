source('CONVERSE.A')
index(36)

id(36)
name({
    'english': 'Xiao',
    'russian': 'Сяо'
})

description:
    print({
        'english': 'a wise, scholarly woman.',
        'russian': 'мудрую, ученую женщину.'
    })
    wait()

    print({
        'english': '\n',
        'russian': '\n'
    })

    f3()

interaction:
    print({
        'english': '"Good $T, @Avatar. For what purpose hast thou come?"',
        'russian': '"Доброго $T, @Аватар. Чего изволишь?"'
    })

label_87:
    print({
        'english': '\n',
        'russian': '\n'
    })

label_88:
    ask()

    case 'buy':
    case {'russian': 'куп'}:
    case 'reag':
    case {'russian': 'реаг'}:
        jump label_2405

    case 'lear':
    case {'russian': 'учи'}:
    case 'spel':
    case {'russian': 'закл'}:
        jump label_1105

    case 'book':
    case {'russian': 'книг'}:
        jump label_3172

    case 'name':
    case {'russian': 'имя'}:
        print({
            'english': '"I am Xiao."',
            'russian': '"Меня зовут Сяо".'
        })
        setBit(byte 235, value 0)
        jump label_87

    case 'job':
    case {'russian': 'раб'}:
        print({
            'english': '"I serve on the Council of @Wizards."',
            'russian': '"Я состою в Совете @волшебников".'
        })
        wait()

        print({
            'english': '\n\n"I also teach @spells and sell magical @reagents."',
            'russian': '\n\n"Также я могу научить @заклинаниям и продаю магические @реагенты".'
        })
        jump label_87

    case 'secr':
    case {'russian': 'секр'}:
    case 'wisp':
    case {'russian': 'огон'}:
        print({
            'english': '"Their secret is far more @powerful than anything I might teach thee."',
            'russian': '"Их тайна гораздо @могущественнее, чем всё то, чему я могла бы обучить тебя".'
        })
        jump label_87

    case 'powe':
    case {'russian': 'могу'}:
        print({
            'english': '"Truly, it would be terrible if the wrong person were to learn it."',
            'russian': '"Воистину, было бы ужасно, если эта тайна попадёт в плохие руки".'
        })
        wait()

        print({
            'english': '\n\n"Only we of the Council of Wizards know the secret."',
            'russian': '\n\n"Только нам, членам Совета волшебников, известна эта тайна".'
        })
        wait()

        print({
            'english': '\n\n"But, since thou art the Avatar, surely it is safe for thee to learn',
            'russian': '\n\n"Но раз уж ты Аватар, то, конечно, нет ничего страшного, если в неё'
        })
        print({
            'english': ' it as well."',
            'russian': ' посвятить и тебя".'
        })
        jump label_87

    case 'avat':
    case {'russian': 'ават'}:
        print({
            'english': '"Your example inspires us all."',
            'russian': '"Твой пример вдохновляет всех нас".'
        })
        jump label_87

    case 'serv':
    case {'russian': 'сост'}:
    case 'coun':
    case {'russian': 'сов'}:
    case 'wiza':
    case {'russian': 'волш'}:
        print({
            'english': '"\'Tis our task to keep the forces of magic in @balance throughout the ',
            'russian': '"Наша задача - поддерживать магическое @равновесие на '
        })
        print({
            'english': 'land."',
            'russian': 'этой земле".'
        })
        wait()

        print({
            'english': '\n\n"We also do what we can to promote the eight @virtues."',
            'russian': '\n\n"Кроме того, мы делаем всё, что в наших силах, чтобы распространить восемь @добродетелей".'
        })
        jump label_87

    case 'prom':
    case {'russian': 'расп'}:
    case 'virt':
    case {'russian': 'добр'}:
        print({
            'english': '"We created the @shrines, many years ago."',
            'russian': '"Много лет назад мы создали @святилища".'
        })
        jump label_87

    case 'shri':
    case {'russian': 'свят'}:
        print({
            'english': '"@Thariand can tell thee more."',
            'russian': '"@Тарианд сможет рассказать больше".'
        })
        jump label_87

    case 'thar':
    case {'russian': 'тари'}:
        print({
            'english': '"He is the librarian at the @Lycaeum."',
            'russian': '"Он работает библиотекарем в @Лицее".'
        })
        jump label_87

    case 'libr':
    case {'russian': 'библ'}:
    case 'lyca':
    case {'russian': 'лице'}:
        print({
            'english': '"Surely you know where the Lycaeum is."',
            'russian': '"Конечно, тебе известно, где находится Лицей".'
        })
        jump label_87

    case 'forc':
    case {'russian': 'сил'}:
    case 'magi':
    case {'russian': 'маги'}:
    case 'bala':
    case {'russian': 'равн'}:
        print({
            'english': '"Not an easy task."',
            'russian': '"Это непросто".'
        })
        jump label_87

    case 'bye':
    case {'russian': 'пока'}:
        print({
            'english': '"Thou art always welcome here, Avatar."\n',
            'russian': '"Тебе всегда здесь рады, Аватар".\n'
        })
        bye()

    case '*':
        print({
            'english': '"Perhaps you should speak of that to another."',
            'russian': '"Возможно, тебе следует спросить об этом кого-то другого".'
        })
        jump label_87
    esac

label_1105:
    if greater(integer(value 23), byte 0):
        integer(value 1) = byte 0
        integer(value 2) = byte 0
        integer(value 4) = byte 0
        jump label_1203
    fi

    integer(value 3) = character(byte 0, byte 0)

    if hasObject(integer(value 3), byte 57, byte 0):
        jump label_1501

    else:
        print({
            'english': '"But thou hast not a spell@book!"',
            'russian': '"Но у тебя нет @книги заклинаний!"'
        })
        jump label_87
    fi

label_1203:
    if greater(integer(value 1), integer(value 23)):
        jump label_1317
    fi

    integer(value 3) = character(integer(value 1), byte 0)

    if equals(hasObject(integer(value 3), byte 57, byte 0), byte 0):
        jump label_1302
    fi

    if equals(integer(value 4), byte 0):
        integer(value 4) = integer(value 3)
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_1302
    fi

    look(integer(value 4))
    print({
        'english': '#2) $Y\n',
        'russian': '#2) $Y\n'
    })
    integer(value 2) = plus(integer(value 2), byte 1)
    integer(value 4) = integer(value 3)

label_1302:
    integer(value 1) = plus(integer(value 1), byte 1)
    jump label_1203

label_1317:
    if equals(integer(value 2), byte 0):
        print({
            'english': '"But none of you has a spell@book!"',
            'russian': '"Но ни у кого из вас нет @книги заклинаний!"'
        })
        jump label_87
    fi

    if equals(integer(value 2), byte 1):
        integer(value 3) = integer(value 4)
        jump label_1501
    fi

    look(integer(value 4))
    print({
        'english': '#2) $Y\n"Which of you?" ',
        'russian': '#2) $Y\n"Кто из вас?" '
    })
    inputDigit(integer(value 2))

    if equals(integer(value 2), byte 0):
        jump label_88
    fi

    integer(value 1) = byte 0

label_1435:
    integer(value 3) = character(integer(value 1), byte 0)

    if hasObject(integer(value 3), byte 57, byte 0):
        integer(value 2) = minus(integer(value 2), byte 1)
    fi

    if equals(integer(value 2), byte 0):
        jump label_1501
    fi

    integer(value 1) = plus(integer(value 1), byte 1)

    if lessOrEquals(integer(value 1), integer(value 23)):
        jump label_1435
    fi

label_1501:
    look(integer(value 3))
    integer(value 1) = level(integer(value 3), byte 0)
    string(value 1) = data(strings_3696, integer(value 1))
    print({
        'english': '"In which Circle does $Y wish to study?" ',
        'russian': '"Заклинание какого Круга $Y желает изучить?" '
    })
    inputDigit(integer(value 0))

    if equals(integer(value 0), byte 0):
        jump label_87
    fi

    if equals(integer(value 0), byte 8):
        jump label_2213
    fi

    if greater(integer(value 0), byte 8):
        print({
            'english': '"As everybody knows, there are only eight circles."',
            'russian': '"Как известно, всего существует восемь кругов".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_1501
    fi

    if greater(integer(value 0), integer(value 1)):
        print({
            'english': '"I sense that $Y is only ready for the #1$1 Circle."',
            'russian': '"Я чувствую, что $Y сможет освоить только #1-й Круг".'
        })
        wait()

        print({
            'english': '\n\n"But such matters are not my concern..."',
            'russian': '\n\n"Но подобные проблемы не моя забота..."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
    fi

label_1771:
    integer(value 0) = minus(integer(value 0), byte 1)
    integer(value 5) = plus(byte 25, multiply(integer(value 0), byte 25))
    integer(value 0) = multiply(integer(value 0), byte 10)

    if equals(data(integers_3723, integer(value 0)), byte 0):
        print({
            'english': '"I have no spells of that circle."',
            'russian': '"У меня нет заклинаний этого круга".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_1501
    fi

    integer(value 2) = byte 1

label_1867:
    string(value 0) = data(strings_3883, minus(plus(integer(value 0), integer(value 2)), byte 1))
    print({
        'english': '#2) $0\n',
        'russian': '#2) $0\n'
    })
    integer(value 2) = plus(integer(value 2), byte 1)

    if greater(data(integers_3723, minus(plus(integer(value 0), integer(value 2)), byte 1)), byte 0):
        jump label_1867
    fi

    print({
        'english': '"Which one?" ',
        'russian': '"Что именно?" '
    })
    inputDigit(integer(value 4))

    if or(equals(integer(value 4), byte 0), greaterOrEquals(integer(value 4), integer(value 2))):
        print({
            'english': '"Perhaps $Y is not ready for this circle."',
            'russian': '"Похоже, $Y пока ещё не может освоить этот круг".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_1501
    fi

    integer(value 4) = minus(integer(value 4), byte 1)

    if less(objectsCount(integer(value 3), byte 88), integer(value 5)):
        print({
            'english': '"$Y lacks the #5 gold required."',
            'russian': '"$Y должен добавить ещё #5 золотых".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_1501
    fi

    print({
        'english': '"That spell costs #5 gold. Interested?" ',
        'russian': '"Это заклинание стоит #5 золотых. Интересует?" '
    })

    choice({
        'english': 'yn',
        'russian': 'дн'
    })

    case 'y':
    case {'russian': 'д'}:
        print({
            'english': '$N hands $Y a piece of rune-covered parchment.',
            'russian': '$N передаёт персонажу $Y кусок пергамента, покрытого рунами.'
        })
        destroyItem(integer(value 3), byte 88, byte 0, integer(value 5))
        createItem(integer(value 3), byte 58, data(integers_3723, plus(integer(value 0), integer(value 4))), byte 1)
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_1501

    case 'n':
    case {'russian': 'н'}:
        jump label_1501
    esac

label_2213:
    if hasBit(byte 201, byte 3):
        jump label_1771

    else:
        print({
            'english': '"Thou art not yet ready for such knowledge."',
            'russian': '"Вы ещё не готовы принять это знание".'
        })
        wait()

        print({
            'english': '\n\n"Seek out and speak with the @wisps, and learn their secrets."',
            'russian': '\n\n"Найди @огоньки и узнай их секреты".'
        })
        wait()

        print({
            'english': '\n\n"Then wilt thou will be prepared to enter the Eighth Circle."',
            'russian': '\n\n"И тогда всё будет готово для твоего перехода на Восьмой круг".'
        })
        jump label_87
    fi

label_2405:
    if greater(integer(value 23), byte 0):
        integer(value 2) = byte 1
        jump label_2440
    fi

    integer(value 3) = character(byte 0, byte 0)
    jump label_2542

label_2440:
    integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    look(integer(value 3))
    print({
        'english': '#2) $Y\n',
        'russian': '#2) $Y\n'
    })

    if lessOrEquals(integer(value 2), integer(value 23)):
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_2440
    fi

    print({
        'english': '"Which of you?" ',
        'russian': '"Кто из вас?" '
    })
    inputDigit(integer(value 2))

    if or(equals(integer(value 2), byte 0), greater(integer(value 2), plus(integer(value 23), byte 1))):
        jump label_88

    else:
        integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    fi

label_2542:
    look(integer(value 3))
    integer(value 1) = byte 1

label_2553:
    string(value 1) = data(strings_3618, minus(integer(value 1), byte 1))
    print({
        'english': '#1) $1\n',
        'russian': '#1) $1\n'
    })
    integer(value 1) = plus(integer(value 1), byte 1)

    if greater(data(integers_3586, minus(integer(value 1), byte 1)), byte 0):
        jump label_2553
    fi

    print({
        'english': '"Which one?" ',
        'russian': '"Что именно?" '
    })
    inputDigit(integer(value 2))

    if or(equals(integer(value 2), byte 0), greaterOrEquals(integer(value 2), integer(value 1))):
        integer(value 2) = byte 1
        jump label_88
    fi

    integer(value 2) = minus(integer(value 2), byte 1)
    integer(value 1) = data(integers_3602, integer(value 2))
    string(value 1) = data(strings_3618, integer(value 2))
    integer(value 5) = byte 0
    print({
        'english': '"$1 costs #1 per portion."',
        'russian': '"$1 стоит #1 за порцию".'
    })
    wait()

    print({
        'english': '\n\n"How many dost thou want?" ',
        'russian': '\n\n"Сколько тебе нужно?" '
    })
    inputInteger(integer(value 4))

    if greater(integer(value 4), word 500):
        integer(value 4) = word 500
    fi

    if equals(integer(value 4), byte 0):
        jump label_2542
    fi

label_2782:
    if less(plus(canCarry(integer(value 3)), weight(byte 88, integer(value 1))), weight(data(integers_3586, integer(value 2)), byte 1)):
        jump label_2910
    fi

    if less(objectsCount(integer(value 3), byte 88), integer(value 1)):
        jump label_3041
    fi

    destroyItem(integer(value 3), byte 88, byte 0, integer(value 1))
    createItem(integer(value 3), data(integers_3586, integer(value 2)), byte 0, byte 1)
    integer(value 5) = plus(integer(value 5), byte 1)

    if equals(integer(value 5), integer(value 4)):
        print({
            'english': '$N hands $Y the $1.',
            'russian': '$N передаёт персонажу $Y предмет $1.'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_2542

    else:
        jump label_2782
    fi

label_2910:
    if integer(value 5):
        print({
            'english': '"Thou cannot carry that much!"',
            'russian': '"Столько тебе не унести!"'
        })
        wait()

        print({
            'english': '\n\n"I\'ll give thee #5; thou dost not need the rest."',
            'russian': '\n\n"Я дам тебе #5; тебе не нужно остальное".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_2542

    else:
        print({
            'english': '"Thou cannot carry any $1!"',
            'russian': '"Больше тебе не унести: $1!"'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_2542
    fi

label_3041:
    if integer(value 5):
        print({
            'english': '"Thou cannot afford that much!"',
            'russian': '"Ты не можешь себе это позволить!"'
        })
        wait()

        print({
            'english': '\n\n"I\'ll give thee #5; thou cannot have the rest."',
            'russian': '\n\n"Я дам тебе #5; тебе не нужно остальное".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_2542

    else:
        print({
            'english': '"Thou cannot afford any $1!"',
            'russian': '"Ты не можешь позволить себе этот предмет: $1!"'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_2542
    fi

label_3172:
    if integer(value 23):
        integer(value 2) = byte 1
        jump label_3204
    fi

    integer(value 3) = character(byte 0, byte 0)
    jump label_3306

label_3204:
    integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    look(integer(value 3))
    print({
        'english': '#2) $Y\n',
        'russian': '#2) $Y\n'
    })

    if lessOrEquals(integer(value 2), integer(value 23)):
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_3204
    fi

    print({
        'english': '"Which of you?" ',
        'russian': '"Кто из вас?" '
    })
    inputDigit(integer(value 2))

    if or(equals(integer(value 2), byte 0), greater(integer(value 2), plus(integer(value 23), byte 1))):
        jump label_88

    else:
        integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    fi

label_3306:
    look(integer(value 3))

    if less(plus(canCarry(integer(value 3)), weight(byte 88, byte 60)), weight(byte 57, byte 1)):
        print({
            'english': '"But thou cannot carry a spellbook!"',
            'russian': '"Но ты не сможешь унести книгу заклинаний!"'
        })
        jump label_87
    fi

    if less(objectsCount(integer(value 3), byte 88), byte 60):
        print({
            'english': '"But thou cannot afford a spellbook!"',
            'russian': '"Но ты не сможешь позволить себе книгу заклинаний!"'
        })
        jump label_87
    fi

    print({
        'english': '"A spellbook costs 60 gold pieces. Interested?" ',
        'russian': '"Книга заклинаний стоит 60 золотых. Интересует?" '
    })

    choice({
        'english': 'yn',
        'russian': 'дн'
    })

    case 'y':
    case {'russian': 'д'}:
        destroyItem(integer(value 3), byte 88, byte 0, byte 60)
        createItem(integer(value 3), byte 57, byte 0, byte 1)
        print({
            'english': '"Here you are."',
            'russian': '"Держи".'
        })
        jump label_87

    case 'n':
    case {'russian': 'н'}:
        if integer(value 23):
            print({
                'english': '"Perhaps one of thy friends then."',
                'russian': '"Тогда может быть это нужно кому-то из твоих друзей".'
            })
            wait()

            print({
                'english': '\n\n',
                'russian': '\n\n'
            })
            integer(value 2) = byte 1
            jump label_3204

        else:
            jump label_87
        fi
    esac

integers_3586 = [
    65, // 0
    67, // 1
    68, // 2
    69, // 3
    70, // 4
    71, // 5
    72, // 6
    0,  // 7
]

integers_3602 = [
    4, // 0
    3, // 1
    3, // 2
    6, // 3
    3, // 4
    3, // 5
    3, // 6
    0, // 7
]

strings_3618 = [
    {
        'english': 'Black Pearl',
        'russian': 'Чёрный жемчуг'
    }, // 0
    {
        'english': 'Garlic',
        'russian': 'Чеснок'
    }, // 1
    {
        'english': 'Ginseng',
        'russian': 'Женьшень'
    }, // 2
    {
        'english': 'Mandrake Root',
        'russian': 'Корень мандрагоры'
    }, // 3
    {
        'english': 'Nightshade',
        'russian': 'Паслён'
    }, // 4
    {
        'english': 'Spider Silk',
        'russian': 'Паучий шёлк'
    }, // 5
    {
        'english': 'Sulfurous Ash',
        'russian': 'Серная зола'
    }, // 6
]

strings_3696 = [
    {
        'english': 'th',
        'russian': '-й'
    }, // 0
    {
        'english': 'st',
        'russian': '-й'
    }, // 1
    {
        'english': 'nd',
        'russian': '-й'
    }, // 2
    {
        'english': 'rd',
        'russian': '-й'
    }, // 3
    {
        'english': 'th',
        'russian': '-й'
    }, // 4
    {
        'english': 'th',
        'russian': '-й'
    }, // 5
    {
        'english': 'th',
        'russian': '-й'
    }, // 6
    {
        'english': 'th',
        'russian': '-й'
    }, // 7
    {
        'english': 'th',
        'russian': '-й'
    }, // 8
]

integers_3723 = [
    1,   // 0
    3,   // 1
    9,   // 2
    0,   // 3
    0,   // 4
    0,   // 5
    0,   // 6
    0,   // 7
    0,   // 8
    0,   // 9
    16,  // 10
    19,  // 11
    21,  // 12
    25,  // 13
    0,   // 14
    0,   // 15
    0,   // 16
    0,   // 17
    0,   // 18
    0,   // 19
    33,  // 20
    35,  // 21
    39,  // 22
    0,   // 23
    0,   // 24
    0,   // 25
    0,   // 26
    0,   // 27
    0,   // 28
    0,   // 29
    48,  // 30
    51,  // 31
    53,  // 32
    54,  // 33
    55,  // 34
    56,  // 35
    57,  // 36
    0,   // 37
    0,   // 38
    0,   // 39
    64,  // 40
    67,  // 41
    71,  // 42
    73,  // 43
    0,   // 44
    0,   // 45
    0,   // 46
    0,   // 47
    0,   // 48
    0,   // 49
    81,  // 50
    86,  // 51
    88,  // 52
    0,   // 53
    0,   // 54
    0,   // 55
    0,   // 56
    0,   // 57
    0,   // 58
    0,   // 59
    99,  // 60
    100, // 61
    105, // 62
    0,   // 63
    0,   // 64
    0,   // 65
    0,   // 66
    0,   // 67
    0,   // 68
    0,   // 69
    113, // 70
    114, // 71
    115, // 72
    116, // 73
    118, // 74
    119, // 75
    120, // 76
    121, // 77
    0,   // 78
    0,   // 79
]

strings_3883 = [
    {
        'english': 'Detect Magic',
        'russian': 'Обнаружить магию'
    }, // 0
    {
        'english': 'Dispel Magic',
        'russian': 'Рассеять магию'
    }, // 1
    {
        'english': 'Light',
        'russian': 'Свет'
    }, // 2
    {
        'english': ' ',
        'russian': ' '
    }, // 3
    {
        'english': ' ',
        'russian': ' '
    }, // 4
    {
        'english': ' ',
        'russian': ' '
    }, // 5
    {
        'english': ' ',
        'russian': ' '
    }, // 6
    {
        'english': ' ',
        'russian': ' '
    }, // 7
    {
        'english': ' ',
        'russian': ' '
    }, // 8
    {
        'english': ' ',
        'russian': ' '
    }, // 9
    {
        'english': 'Infravision',
        'russian': 'Инфракрасное зрение'
    }, // 10
    {
        'english': 'Reappear',
        'russian': 'Проявление'
    }, // 11
    {
        'english': 'Telekinesis',
        'russian': 'Телекинез'
    }, // 12
    {
        'english': 'Vanish',
        'russian': 'Исчезновение'
    }, // 13
    {
        'english': ' ',
        'russian': ' '
    }, // 14
    {
        'english': ' ',
        'russian': ' '
    }, // 15
    {
        'english': ' ',
        'russian': ' '
    }, // 16
    {
        'english': ' ',
        'russian': ' '
    }, // 17
    {
        'english': ' ',
        'russian': ' '
    }, // 18
    {
        'english': ' ',
        'russian': ' '
    }, // 19
    {
        'english': 'Dispel Field',
        'russian': 'Рассеивающее поле'
    }, // 20
    {
        'english': 'Great Light',
        'russian': 'Великий свет'
    }, // 21
    {
        'english': 'Peer',
        'russian': 'Обзор'
    }, // 22
    {
        'english': '',
        'russian': ''
    }, // 23
    {
        'english': '',
        'russian': ''
    }, // 24
    {
        'english': '',
        'russian': ''
    }, // 25
    {
        'english': '',
        'russian': ''
    }, // 26
    {
        'english': '',
        'russian': ''
    }, // 27
    {
        'english': '',
        'russian': ''
    }, // 28
    {
        'english': '',
        'russian': ''
    }, // 29
    {
        'english': 'Animate',
        'russian': 'Оживить'
    }, // 30
    {
        'english': 'Fire Field',
        'russian': 'Огненное поле'
    }, // 31
    {
        'english': 'Locate',
        'russian': 'Указать'
    }, // 32
    {
        'english': 'Mass Dispel',
        'russian': 'Групповое рассеивание'
    }, // 33
    {
        'english': 'Poison Field',
        'russian': 'Ядовитое поле'
    }, // 34
    {
        'english': 'Sleep Field',
        'russian': 'Сонное поле'
    }, // 35
    {
        'english': 'Wind Change',
        'russian': 'Изменение ветра'
    }, // 36
    {
        'english': '',
        'russian': ''
    }, // 37
    {
        'english': '',
        'russian': ''
    }, // 38
    {
        'english': '',
        'russian': ''
    }, // 39
    {
        'english': 'Energy Field',
        'russian': 'Энергетическое поле'
    }, // 40
    {
        'english': 'Invisibility',
        'russian': 'Невидимость'
    }, // 41
    {
        'english': 'Reveal',
        'russian': 'Обнаружить'
    }, // 42
    {
        'english': 'X-Ray',
        'russian': 'Рентген'
    }, // 43
    {
        'english': '',
        'russian': ''
    }, // 44
    {
        'english': '',
        'russian': ''
    }, // 45
    {
        'english': '',
        'russian': ''
    }, // 46
    {
        'english': '',
        'russian': ''
    }, // 47
    {
        'english': '',
        'russian': ''
    }, // 48
    {
        'english': '',
        'russian': ''
    }, // 49
    {
        'english': 'Clone',
        'russian': 'Клонировать'
    }, // 50
    {
        'english': 'Negate Magic',
        'russian': 'Блокировка магии'
    }, // 51
    {
        'english': 'Replicate',
        'russian': 'Репликация'
    }, // 52
    {
        'english': '',
        'russian': ''
    }, // 53
    {
        'english': '',
        'russian': ''
    }, // 54
    {
        'english': '',
        'russian': ''
    }, // 55
    {
        'english': '',
        'russian': ''
    }, // 56
    {
        'english': '',
        'russian': ''
    }, // 57
    {
        'english': '',
        'russian': ''
    }, // 58
    {
        'english': '',
        'russian': ''
    }, // 59
    {
        'english': 'Fear',
        'russian': 'Страх'
    }, // 60
    {
        'english': 'Gate Travel',
        'russian': 'Врата путешествий'
    }, // 61
    {
        'english': 'Wizard Eye',
        'russian': 'Магический глаз'
    }, // 62
    {
        'english': '',
        'russian': ''
    }, // 63
    {
        'english': '',
        'russian': ''
    }, // 64
    {
        'english': '',
        'russian': ''
    }, // 65
    {
        'english': '',
        'russian': ''
    }, // 66
    {
        'english': '',
        'russian': ''
    }, // 67
    {
        'english': '',
        'russian': ''
    }, // 68
    {
        'english': '',
        'russian': ''
    }, // 69
    {
        'english': 'Death Wind',
        'russian': 'Ветер смерти'
    }, // 70
    {
        'english': 'Eclipse',
        'russian': 'Затмение'
    }, // 71
    {
        'english': 'Mass Charm',
        'russian': 'Групповые чары'
    }, // 72
    {
        'english': 'Mass Kill',
        'russian': 'Групповое убийство'
    }, // 73
    {
        'english': 'Slime',
        'russian': 'Слизь'
    }, // 74
    {
        'english': 'Summon',
        'russian': 'Призыв'
    }, // 75
    {
        'english': 'Time Stop',
        'russian': 'Остановка времени'
    }, // 76
    {
        'english': 'Tremor',
        'russian': 'Дрожь'
    }, // 77
    {
        'english': '',
        'russian': ''
    }, // 78
    {
        'english': '',
        'russian': ''
    }, // 79
]
