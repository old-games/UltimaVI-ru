source('CONVERSE.A')
index(58)

id(58)
name({
    'english': 'Nicodemus',
    'russian': 'FIXME Nicodemus'
})

description:
    print({
        'english': 'a wizened old man with a ready smile.',
        'russian': 'FIXME a wizened old man with a ready smile.'
    })
    wait()

    f3()

interaction:
    print({
        'english': '\n"Good $T, Avatar. For what purpose hast thou come?"',
        'russian': 'FIXME \n"Good $T, Avatar. For what purpose hast thou come?"'
    })

label_104:
    print({
        'english': '\n',
        'russian': 'FIXME \n'
    })

label_105:
    ask()

    case {'english': 'buy'}:
    case {'russian': 'FIXME buy'}:
    case {'english': 'reag'}:
    case {'russian': 'FIXME reag'}:
        jump label_1684

    case {'english': 'lear'}:
    case {'russian': 'FIXME lear'}:
    case {'english': 'spel'}:
    case {'russian': 'FIXME spel'}:
        jump label_584

    case {'english': 'book'}:
    case {'russian': 'FIXME book'}:
        jump label_2456

    case {'english': 'sta'}:
    case {'russian': 'FIXME sta'}:
        jump label_2855

    case {'english': 'name'}:
    case {'russian': 'FIXME name'}:
        print({
            'english': '"I am Nicodemus."',
            'russian': 'FIXME "I am Nicodemus."'
        })
        setBit(byte 235, value 0)
        jump label_104

    case {'english': 'job'}:
    case {'russian': 'FIXME job'}:
        print({
            'english': '"Why, bless me, I work here!"',
            'russian': 'FIXME "Why, bless me, I work here!"'
        })
        wait()

        print({
            'english': '\n\n"I sell @reagents, teach @spells, and craft magic @staves."',
            'russian': 'FIXME \n\n"I sell @reagents, teach @spells, and craft magic @staves."'
        })
        wait()

        print({
            'english': '\n\n"I also do a little @experimenting."',
            'russian': 'FIXME \n\n"I also do a little @experimenting."'
        })
        jump label_104

    case {'english': 'expe'}:
    case {'russian': 'FIXME expe'}:
        print({
            'english': '"Oh, nothing a great adventurer such as yourself would be @interested ',
            'russian': 'FIXME "Oh, nothing a great adventurer such as yourself would be @interested '
        })
        print({
            'english': 'in."',
            'russian': 'FIXME in."'
        })
        jump label_104

    case {'english': 'inte'}:
    case {'russian': 'FIXME inte'}:
        print({
            'english': 'He gets a suspicious look in his eyes.',
            'russian': 'FIXME He gets a suspicious look in his eyes.'
        })
        wait()

        print({
            'english': '\n\n"Don\'t be too nosy, ',
            'russian': 'FIXME \n\n"Don\'t be too nosy, '
        })

        if integer(value 16):
            print({
                'english': 'girlie!"',
                'russian': 'FIXME girlie!"'
            })

        else:
            print({
                'english': 'sonny!"',
                'russian': 'FIXME sonny!"'
            })
        fi

        jump label_104

    case {'english': 'bye'}:
    case {'russian': 'FIXME bye'}:
        print({
            'english': '"Come back anytime!"\n',
            'russian': 'FIXME "Come back anytime!"\n'
        })
        bye()

    case '*':
        print({
            'english': '"Nope, nope, I won\'t talk about that!"',
            'russian': 'FIXME "Nope, nope, I won\'t talk about that!"'
        })
        jump label_104
    esac

label_584:
    if greater(integer(value 23), byte 0):
        integer(value 1) = byte 0
        integer(value 2) = byte 0
        integer(value 4) = byte 0
        jump label_682
    fi

    integer(value 3) = character(byte 0, byte 0)

    if hasObject(integer(value 3), byte 57, byte 0):
        jump label_980

    else:
        print({
            'english': '"But thou hast not a spell@book!"',
            'russian': 'FIXME "But thou hast not a spell@book!"'
        })
        jump label_104
    fi

label_682:
    if greater(integer(value 1), integer(value 23)):
        jump label_796
    fi

    integer(value 3) = character(integer(value 1), byte 0)

    if equals(hasObject(integer(value 3), byte 57, byte 0), byte 0):
        jump label_781
    fi

    if equals(integer(value 4), byte 0):
        integer(value 4) = integer(value 3)
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_781
    fi

    look(integer(value 4))
    print({
        'english': '#2) $Y\n',
        'russian': 'FIXME #2) $Y\n'
    })
    integer(value 2) = plus(integer(value 2), byte 1)
    integer(value 4) = integer(value 3)

label_781:
    integer(value 1) = plus(integer(value 1), byte 1)
    jump label_682

label_796:
    if equals(integer(value 2), byte 0):
        print({
            'english': '"But none of you has a spell@book!"',
            'russian': 'FIXME "But none of you has a spell@book!"'
        })
        jump label_104
    fi

    if equals(integer(value 2), byte 1):
        integer(value 3) = integer(value 4)
        jump label_980
    fi

    look(integer(value 4))
    print({
        'english': '#2) $Y\n"Which of you?" ',
        'russian': 'FIXME #2) $Y\n"Which of you?" '
    })
    inputDigit(integer(value 2))

    if equals(integer(value 2), byte 0):
        jump label_104
    fi

    integer(value 1) = byte 0

label_914:
    integer(value 3) = character(integer(value 1), byte 0)

    if hasObject(integer(value 3), byte 57, byte 0):
        integer(value 2) = minus(integer(value 2), byte 1)
    fi

    if equals(integer(value 2), byte 0):
        jump label_980
    fi

    integer(value 1) = plus(integer(value 1), byte 1)

    if lessOrEquals(integer(value 1), integer(value 23)):
        jump label_914
    fi

label_980:
    look(integer(value 3))
    integer(value 1) = level(integer(value 3), byte 0)
    string(value 1) = data(strings_3527, integer(value 1))
    print({
        'english': '"In which Circle does $Y wish to study?" ',
        'russian': 'FIXME "In which Circle does $Y wish to study?" '
    })
    inputDigit(integer(value 0))

    if equals(integer(value 0), byte 0):
        jump label_105
    fi

    if greater(integer(value 0), byte 8):
        print({
            'english': '"As everybody knows, there are only eight circles."',
            'russian': 'FIXME "As everybody knows, there are only eight circles."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_980
    fi

    if greater(integer(value 0), integer(value 1)):
        print({
            'english': '"I sense that $Y is only ready for the #1$1 Circle."',
            'russian': 'FIXME "I sense that $Y is only ready for the #1$1 Circle."'
        })
        wait()

        print({
            'english': '\n\n"But such matters are not my concern..."',
            'russian': 'FIXME \n\n"But such matters are not my concern..."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
    fi

    integer(value 0) = minus(integer(value 0), byte 1)
    integer(value 0) = multiply(integer(value 0), byte 10)

    if equals(data(integers_3554, integer(value 0)), byte 0):
        print({
            'english': '"I have no spells of that circle."',
            'russian': 'FIXME "I have no spells of that circle."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_980
    fi

    integer(value 2) = byte 1

label_1320:
    string(value 6) = data(strings_3714, minus(plus(integer(value 0), integer(value 2)), byte 1))
    print({
        'english': '#2) $6\n',
        'russian': 'FIXME #2) $6\n'
    })
    integer(value 2) = plus(integer(value 2), byte 1)

    if greater(data(integers_3554, minus(plus(integer(value 0), integer(value 2)), byte 1)), byte 0):
        jump label_1320
    fi

    print({
        'english': '"Which of these?" ',
        'russian': 'FIXME "Which of these?" '
    })
    inputDigit(integer(value 4))

    if or(equals(integer(value 4), byte 0), greaterOrEquals(integer(value 4), integer(value 2))):
        print({
            'english': '"Perhaps $Y is not ready for this circle."',
            'russian': 'FIXME "Perhaps $Y is not ready for this circle."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_980
    fi

    integer(value 4) = minus(integer(value 4), byte 1)
    integer(value 5) = plus(byte 20, multiply(integer(value 0), byte 2))

    if less(objectsCount(integer(value 3), byte 88), integer(value 5)):
        print({
            'english': '"$Y lacks the #5 gold required."',
            'russian': 'FIXME "$Y lacks the #5 gold required."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_980
    fi

    print({
        'english': '"That spell costs #5 gold. Interested?" ',
        'russian': 'FIXME "That spell costs #5 gold. Interested?" '
    })

    choice({
        'english': 'yn',
        'russian': 'FIXME yn'
    })

    case {'english': 'y'}:
    case {'russian': 'FIXME y'}:
        print({
            'english': '$N hands $Y a piece of rune-covered parchment.',
            'russian': 'FIXME $N hands $Y a piece of rune-covered parchment.'
        })
        destroyItem(integer(value 3), byte 88, byte 0, integer(value 5))
        createItem(integer(value 3), byte 58, data(integers_3554, plus(integer(value 0), integer(value 4))), byte 1)
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_980

    case {'english': 'n'}:
    case {'russian': 'FIXME n'}:
        jump label_980
    esac

label_1684:
    if greater(integer(value 23), byte 0):
        integer(value 2) = byte 1
        jump label_1719
    fi

    integer(value 3) = character(byte 0, byte 0)
    jump label_1821

label_1719:
    integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    look(integer(value 3))
    print({
        'english': '#2) $Y\n',
        'russian': 'FIXME #2) $Y\n'
    })

    if lessOrEquals(integer(value 2), integer(value 23)):
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_1719
    fi

    print({
        'english': '"Which of you?" ',
        'russian': 'FIXME "Which of you?" '
    })
    inputDigit(integer(value 2))

    if or(equals(integer(value 2), byte 0), greater(integer(value 2), plus(integer(value 23), byte 1))):
        jump label_104

    else:
        integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    fi

label_1821:
    look(integer(value 3))
    integer(value 1) = byte 1

label_1832:
    string(value 1) = data(strings_3469, minus(integer(value 1), byte 1))
    print({
        'english': '#1) $1\n',
        'russian': 'FIXME #1) $1\n'
    })
    integer(value 1) = plus(integer(value 1), byte 1)

    if greater(data(integers_3437, minus(integer(value 1), byte 1)), byte 0):
        jump label_1832
    fi

    print({
        'english': '"Which of these?" ',
        'russian': 'FIXME "Which of these?" '
    })
    inputDigit(integer(value 2))

    if or(equals(integer(value 2), byte 0), greaterOrEquals(integer(value 2), integer(value 1))):
        integer(value 2) = byte 1
        jump label_105
    fi

    integer(value 2) = minus(integer(value 2), byte 1)
    integer(value 1) = data(integers_3453, integer(value 2))
    string(value 1) = data(strings_3469, integer(value 2))
    integer(value 5) = byte 0
    print({
        'english': '"$1 costs #1 per portion."',
        'russian': 'FIXME "$1 costs #1 per portion."'
    })
    wait()

    print({
        'english': '\n\n"How many dost thou want?" ',
        'russian': 'FIXME \n\n"How many dost thou want?" '
    })
    input(integer(value 4))

    if greater(integer(value 4), word 500):
        integer(value 4) = word 500
    fi

    if equals(integer(value 4), byte 0):
        jump label_1821
    fi

label_2066:
    if less(plus(canCarry(integer(value 3)), weight(byte 88, integer(value 1))), weight(data(integers_3437, integer(value 2)), byte 1)):
        jump label_2194
    fi

    if less(objectsCount(integer(value 3), byte 88), integer(value 1)):
        jump label_2325
    fi

    destroyItem(integer(value 3), byte 88, byte 0, integer(value 1))
    createItem(integer(value 3), data(integers_3437, integer(value 2)), byte 0, byte 1)
    integer(value 5) = plus(integer(value 5), byte 1)

    if equals(integer(value 5), integer(value 4)):
        print({
            'english': '$N hands $Y the $1.',
            'russian': 'FIXME $N hands $Y the $1.'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_1821

    else:
        jump label_2066
    fi

label_2194:
    if integer(value 5):
        print({
            'english': '"Thou cannot carry that much!"',
            'russian': 'FIXME "Thou cannot carry that much!"'
        })
        wait()

        print({
            'english': '\n\n"I\'ll give thee #5; thou dost not need the rest."',
            'russian': 'FIXME \n\n"I\'ll give thee #5; thou dost not need the rest."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_1821

    else:
        print({
            'english': '"Thou cannot carry any $1!"',
            'russian': 'FIXME "Thou cannot carry any $1!"'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_1821
    fi

label_2325:
    if integer(value 5):
        print({
            'english': '"Thou cannot afford that much!"',
            'russian': 'FIXME "Thou cannot afford that much!"'
        })
        wait()

        print({
            'english': '\n\n"I\'ll give thee #5; thou cannot have the rest."',
            'russian': 'FIXME \n\n"I\'ll give thee #5; thou cannot have the rest."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_1821

    else:
        print({
            'english': '"Thou cannot afford any $1!"',
            'russian': 'FIXME "Thou cannot afford any $1!"'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_1821
    fi

label_2456:
    if integer(value 23):
        integer(value 2) = byte 1
        jump label_2488
    fi

    integer(value 3) = character(byte 0, byte 0)
    jump label_2590

label_2488:
    integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    look(integer(value 3))
    print({
        'english': '#2) $Y\n',
        'russian': 'FIXME #2) $Y\n'
    })

    if lessOrEquals(integer(value 2), integer(value 23)):
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_2488
    fi

    print({
        'english': '"Which of you?" ',
        'russian': 'FIXME "Which of you?" '
    })
    inputDigit(integer(value 2))

    if or(equals(integer(value 2), byte 0), greater(integer(value 2), plus(integer(value 23), byte 1))):
        jump label_104

    else:
        integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    fi

label_2590:
    look(integer(value 3))

    if less(plus(canCarry(integer(value 3)), weight(byte 88, byte 45)), weight(byte 57, byte 1)):
        print({
            'english': '"But thou cannot carry a spellbook!"',
            'russian': 'FIXME "But thou cannot carry a spellbook!"'
        })
        jump label_104
    fi

    if less(objectsCount(integer(value 3), byte 88), byte 45):
        print({
            'english': '"But thou cannot afford a spellbook!"',
            'russian': 'FIXME "But thou cannot afford a spellbook!"'
        })
        jump label_104
    fi

    print({
        'english': '"A spellbook costs 45 gold pieces. Interested?" ',
        'russian': 'FIXME "A spellbook costs 45 gold pieces. Interested?" '
    })

    choice({
        'english': 'yn',
        'russian': 'FIXME yn'
    })

    case {'english': 'y'}:
    case {'russian': 'FIXME y'}:
        destroyItem(integer(value 3), byte 88, byte 0, byte 45)
        createItem(integer(value 3), byte 57, byte 0, byte 1)
        jump label_104

    case {'english': 'n'}:
    case {'russian': 'FIXME n'}:
        if integer(value 23):
            print({
                'english': '"Perhaps one of thy friends then."',
                'russian': 'FIXME "Perhaps one of thy friends then."'
            })
            wait()

            print({
                'english': '\n\n',
                'russian': 'FIXME \n\n'
            })
            integer(value 2) = byte 1
            jump label_2488

        else:
            jump label_104
        fi
    esac

label_2855:
    print({
        'english': '"Yes, I make magical yew staves."',
        'russian': 'FIXME "Yes, I make magical yew staves."'
    })
    wait()

    print({
        'english': '\n\n"If thou knowest the Enchant spell, thou canst lock a spell within ',
        'russian': 'FIXME \n\n"If thou knowest the Enchant spell, thou canst lock a spell within '
    })
    print({
        'english': 'the staff for quick use!"',
        'russian': 'FIXME the staff for quick use!"'
    })
    wait()

    print({
        'english': '\n\n"A yew staff costs 100 gold pieces, but it\'s worth twice that!"',
        'russian': 'FIXME \n\n"A yew staff costs 100 gold pieces, but it\'s worth twice that!"'
    })
    wait()

    print({
        'english': '\n\n"Wouldst thou like to buy one?" ',
        'russian': 'FIXME \n\n"Wouldst thou like to buy one?" '
    })

    choice({
        'english': 'yn',
        'russian': 'FIXME yn'
    })

    case {'english': 'n'}:
    case {'russian': 'FIXME n'}:
        print({
            'english': '"Perhaps some other time, then."',
            'russian': 'FIXME "Perhaps some other time, then."'
        })
        jump label_104

    case {'english': 'y'}:
    case {'russian': 'FIXME y'}:
        if integer(value 23):
            integer(value 2) = byte 1
            jump label_3163

        else:
            integer(value 3) = character(byte 0, byte 0)
            jump label_3265
        fi

label_3163:
        integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
        look(integer(value 3))
        print({
            'english': '#2) $Y\n',
            'russian': 'FIXME #2) $Y\n'
        })

        if lessOrEquals(integer(value 2), integer(value 23)):
            integer(value 2) = plus(integer(value 2), byte 1)
            jump label_3163
        fi

        print({
            'english': '"Which of you?" ',
            'russian': 'FIXME "Which of you?" '
        })
        inputDigit(integer(value 2))

        if or(equals(integer(value 2), byte 0), greater(integer(value 2), plus(integer(value 23), byte 1))):
            jump label_104

        else:
            integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
        fi

label_3265:
        look(integer(value 3))

        if less(plus(canCarry(integer(value 3)), weight(byte 88, byte 100)), weight(byte 78, byte 1)):
            print({
                'english': '"But thou cannot carry a staff!"',
                'russian': 'FIXME "But thou cannot carry a staff!"'
            })
            jump label_104
        fi

        if less(objectsCount(integer(value 3), byte 88), byte 100):
            print({
                'english': '"But thou cannot afford a staff!"',
                'russian': 'FIXME "But thou cannot afford a staff!"'
            })
            jump label_104
        fi

        print({
            'english': 'The old man hands $Y a yew staff.',
            'russian': 'FIXME The old man hands $Y a yew staff.'
        })
        destroyItem(integer(value 3), byte 88, byte 0, byte 100)
        createItem(integer(value 3), byte 78, byte 0, byte 1)
        jump label_104

integers_3437 = [
    66, // 0
    67, // 1
    68, // 2
    71, // 3
    72, // 4
    0,  // 5
    0,  // 6
    0,  // 7
]

integers_3453 = [
    2, // 0
    1, // 1
    1, // 2
    1, // 3
    2, // 4
    0, // 5
    0, // 6
    0, // 7
]

strings_3469 = [
    {
            'english': 'Blood Moss',
            'russian': 'FIXME Blood Moss'
        }, // 0
    {
            'english': 'Garlic',
            'russian': 'FIXME Garlic'
        }, // 1
    {
            'english': 'Ginseng',
            'russian': 'FIXME Ginseng'
        }, // 2
    {
            'english': 'Spider Silk',
            'russian': 'FIXME Spider Silk'
        }, // 3
    {
            'english': 'Sulfurous Ash',
            'russian': 'FIXME Sulfurous Ash'
        }, // 4
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 5
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 6
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 7
]

strings_3527 = [
    {
            'english': 'th',
            'russian': 'FIXME th'
        }, // 0
    {
            'english': 'st',
            'russian': 'FIXME st'
        }, // 1
    {
            'english': 'nd',
            'russian': 'FIXME nd'
        }, // 2
    {
            'english': 'rd',
            'russian': 'FIXME rd'
        }, // 3
    {
            'english': 'th',
            'russian': 'FIXME th'
        }, // 4
    {
            'english': 'th',
            'russian': 'FIXME th'
        }, // 5
    {
            'english': 'th',
            'russian': 'FIXME th'
        }, // 6
    {
            'english': 'th',
            'russian': 'FIXME th'
        }, // 7
    {
            'english': 'th',
            'russian': 'FIXME th'
        }, // 8
]

integers_3554 = [
    2,   // 0
    0,   // 1
    0,   // 2
    0,   // 3
    0,   // 4
    0,   // 5
    0,   // 6
    0,   // 7
    0,   // 8
    0,   // 9
    20,  // 10
    23,  // 11
    24,  // 12
    0,   // 13
    0,   // 14
    0,   // 15
    0,   // 16
    0,   // 17
    0,   // 18
    0,   // 19
    36,  // 20
    38,  // 21
    40,  // 22
    41,  // 23
    0,   // 24
    0,   // 25
    0,   // 26
    0,   // 27
    0,   // 28
    0,   // 29
    49,  // 30
    0,   // 31
    0,   // 32
    0,   // 33
    0,   // 34
    0,   // 35
    0,   // 36
    0,   // 37
    0,   // 38
    0,   // 39
    66,  // 40
    0,   // 41
    0,   // 42
    0,   // 43
    0,   // 44
    0,   // 45
    0,   // 46
    0,   // 47
    0,   // 48
    0,   // 49
    80,  // 50
    82,  // 51
    85,  // 52
    89,  // 53
    0,   // 54
    0,   // 55
    0,   // 56
    0,   // 57
    0,   // 58
    0,   // 59
    97,  // 60
    103, // 61
    0,   // 62
    0,   // 63
    0,   // 64
    0,   // 65
    0,   // 66
    0,   // 67
    0,   // 68
    0,   // 69
    0,   // 70
    0,   // 71
    0,   // 72
    0,   // 73
    0,   // 74
    0,   // 75
    0,   // 76
    0,   // 77
    0,   // 78
    0,   // 79
]

strings_3714 = [
    {
            'english': 'Detect Trap',
            'russian': 'FIXME Detect Trap'
        }, // 0
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 1
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 2
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 3
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 4
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 5
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 6
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 7
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 8
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 9
    {
            'english': 'Sleep',
            'russian': 'FIXME Sleep'
        }, // 10
    {
            'english': 'Unlock Magic',
            'russian': 'FIXME Unlock Magic'
        }, // 11
    {
            'english': 'Untrap',
            'russian': 'FIXME Untrap'
        }, // 12
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 13
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 14
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 15
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 16
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 17
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 18
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 19
    {
            'english': 'Magic Lock',
            'russian': 'FIXME Magic Lock'
        }, // 20
    {
            'english': 'Mass Sleep',
            'russian': 'FIXME Mass Sleep'
        }, // 21
    {
            'english': 'Protection',
            'russian': 'FIXME Protection'
        }, // 22
    {
            'english': 'Repel Undead',
            'russian': 'FIXME Repel Undead'
        }, // 23
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 24
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 25
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 26
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 27
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 28
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 29
    {
            'english': 'Conjure',
            'russian': 'FIXME Conjure'
        }, // 30
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 31
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 32
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 33
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 34
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 35
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 36
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 37
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 38
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 39
    {
            'english': 'Insect Swarm',
            'russian': 'FIXME Insect Swarm'
        }, // 40
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 41
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 42
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 43
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 44
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 45
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 46
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 47
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 48
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 49
    {
            'english': 'Charm',
            'russian': 'FIXME Charm'
        }, // 50
    {
            'english': 'Confuse',
            'russian': 'FIXME Confuse'
        }, // 51
    {
            'english': 'Mass Protect',
            'russian': 'FIXME Mass Protect'
        }, // 52
    {
            'english': 'Web',
            'russian': 'FIXME Web'
        }, // 53
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 54
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 55
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 56
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 57
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 58
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 59
    {
            'english': 'Enchant',
            'russian': 'FIXME Enchant'
        }, // 60
    {
            'english': 'Mass Invisibility',
            'russian': 'FIXME Mass Invisibility'
        }, // 61
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 62
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 63
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 64
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 65
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 66
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 67
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 68
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 69
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 70
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 71
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 72
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 73
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 74
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 75
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 76
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 77
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 78
    {
            'english': ' ',
            'russian': 'FIXME  '
        }, // 79
]
