source('CONVERSE.B')
index(37)

id(136)
name({
    'english': 'Taynith',
    'russian': 'FIXME Taynith'
})

description:
    print({
        'english': 'a mysterious gypsy woman wearing an ankh pendant.\n*',
        'russian': 'FIXME a mysterious gypsy woman wearing an ankh pendant.\n*'
    })

interaction:
    integer(value 1) = byte 99

    if isNearby(byte 110):
        print({
            'english': '"My chances to visit Dr. @Cat come all too seldom."\n*\n"Seek me out ',
            'russian': 'FIXME "My chances to visit Dr. @Cat come all too seldom."\n*\n"Seek me out '
        })
        print({
            'english': 'later and I will speak with you."\n',
            'russian': 'FIXME later and I will speak with you."\n'
        })
        bye()
    fi

    if hasBit(byte 135, byte 7):
        print({
            'english': '"I have no time for those who are cruel to animals."\n',
            'russian': 'FIXME "I have no time for those who are cruel to animals."\n'
        })
        bye()
    fi

    if hasBit(byte 235, value 0):
        print({
            'english': '"Welcome back, Avatar."',
            'russian': 'FIXME "Welcome back, Avatar."'
        })

    else:
        print({
            'english': '"You are the Avatar. I had a vision that you would come to seek aid ',
            'russian': 'FIXME "You are the Avatar. I had a vision that you would come to seek aid '
        })
        print({
            'english': 'from me."',
            'russian': 'FIXME from me."'
        })
        setBit(byte 235, value 0)
    fi

label_353:
    print({
        'english': '\n',
        'russian': 'FIXME \n'
    })

    ask()

    case {'english': 'name'}:
    case {'russian': 'FIXME name'}:
        print({
            'english': '"Some know me as @Taynith. That is what you may call me."',
            'russian': 'FIXME "Some know me as @Taynith. That is what you may call me."'
        })
        jump label_353

    case {'english': 'tayn'}:
    case {'russian': 'FIXME tayn'}:
    case {'english': 'know'}:
    case {'russian': 'FIXME know'}:
    case {'english': 'call'}:
    case {'russian': 'FIXME call'}:
    case {'english': 'pati'}:
    case {'russian': 'FIXME pati'}:
        print({
            'english': '"Seek not my @true name. Let \'Taynith\' suffice."',
            'russian': 'FIXME "Seek not my @true name. Let \'Taynith\' suffice."'
        })
        jump label_353

    case {'english': 'true'}:
    case {'russian': 'FIXME true'}:
        print({
            'english': '"You try my patience."',
            'russian': 'FIXME "You try my patience."'
        })
        jump label_353

    case {'english': 'job'}:
    case {'russian': 'FIXME job'}:
    case {'english': 'aid'}:
    case {'russian': 'FIXME aid'}:
        print({
            'english': '"I tell @fortunes - for a price."',
            'russian': 'FIXME "I tell @fortunes - for a price."'
        })
        jump label_353

    case {'english': 'tell'}:
    case {'russian': 'FIXME tell'}:
    case {'english': 'fort'}:
    case {'russian': 'FIXME fort'}:
    case {'english': 'sell'}:
    case {'russian': 'FIXME sell'}:
    case {'english': 'buy'}:
    case {'russian': 'FIXME buy'}:
    case {'english': 'pric'}:
    case {'russian': 'FIXME pric'}:
    case {'english': 'cons'}:
    case {'russian': 'FIXME cons'}:
    case {'english': 'tile'}:
    case {'russian': 'FIXME tile'}:
    case {'english': 'futu'}:
    case {'russian': 'FIXME futu'}:
        jump label_1676

    case {'english': 'advi'}:
    case {'russian': 'FIXME advi'}:
        jump label_1440

    case {'english': 'gorg'}:
    case {'russian': 'FIXME gorg'}:
        print({
            'english': '"A gorgio - that\'s almost as good as being a gypsy!"',
            'russian': 'FIXME "A gorgio - that\'s almost as good as being a gypsy!"'
        })
        jump label_353

    case {'english': 'bye'}:
    case {'russian': 'FIXME bye'}:
        print({
            'english': '"Our @paths will cross again. I have foreseen it."\n',
            'russian': 'FIXME "Our @paths will cross again. I have foreseen it."\n'
        })
        bye()

    case {'english': 'capt'}:
    case {'russian': 'FIXME capt'}:
    case {'english': 'john'}:
    case {'russian': 'FIXME john'}:
        print({
            'english': '"Captain John? Yes, he brought us a silver tablet some time ago, to ',
            'russian': 'FIXME "Captain John? Yes, he brought us a silver tablet some time ago, to '
        })
        print({
            'english': 'deliver to the Lycaeum."\n*\n"@Zoltan took care of the deal, so he could',
            'russian': 'FIXME deliver to the Lycaeum."\n*\n"@Zoltan took care of the deal, so he could'
        })
        print({
            'english': ' tell you more than I."',
            'russian': 'FIXME  tell you more than I."'
        })
        jump label_353

    case {'english': 'silv'}:
    case {'russian': 'FIXME silv'}:
    case {'english': 'tabl'}:
    case {'russian': 'FIXME tabl'}:
    case {'english': 'lyca'}:
    case {'russian': 'FIXME lyca'}:
        print({
            'english': '"Ask @Zoltan about it."',
            'russian': 'FIXME "Ask @Zoltan about it."'
        })
        jump label_353

    case {'english': 'zolt'}:
    case {'russian': 'FIXME zolt'}:
        print({
            'english': '"King of the gypsies, sure as my name\'s Taynith."',
            'russian': 'FIXME "King of the gypsies, sure as my name\'s Taynith."'
        })
        jump label_353

    case {'english': 'path'}:
    case {'russian': 'FIXME path'}:
        print({
            'english': '"My path leads to @Paws, as soon as I have time to visit there."',
            'russian': 'FIXME "My path leads to @Paws, as soon as I have time to visit there."'
        })
        jump label_353

    case {'english': 'paw'}:
    case {'russian': 'FIXME paw'}:
        print({
            'english': '"My good @friend Dr. Cat lives there."',
            'russian': 'FIXME "My good @friend Dr. Cat lives there."'
        })
        jump label_353

    case {'english': 'frie'}:
    case {'russian': 'FIXME frie'}:
    case {'english': 'dr'}:
    case {'russian': 'FIXME dr'}:
    case {'english': 'cat'}:
    case {'russian': 'FIXME cat'}:
        print({
            'english': '"Ask him about the duck sometime."',
            'russian': 'FIXME "Ask him about the duck sometime."'
        })
        jump label_353

    case {'english': 'ask'}:
    case {'russian': 'FIXME ask'}:
    case {'english': 'duck'}:
    case {'russian': 'FIXME duck'}:
        print({
            'english': '"Yes, ask him!"',
            'russian': 'FIXME "Yes, ask him!"'
        })
        jump label_353

    case {'english': 'lyca'}:
    case {'russian': 'FIXME lyca'}:
        print({
            'english': '"@Zoltan can tell you where it is."',
            'russian': 'FIXME "@Zoltan can tell you where it is."'
        })
        jump label_353

    case {'english': 'penu'}:
    case {'russian': 'FIXME penu'}:
        if hasBit(byte 41, value 0):
            print({
                'english': '"I sense that you have met her already."',
                'russian': 'FIXME "I sense that you have met her already."'
            })

        else:
            print({
                'english': '"There is no need for me to direct you there. You are destined to meet',
                'russian': 'FIXME "There is no need for me to direct you there. You are destined to meet'
            })
            print({
                'english': ' her."',
                'russian': 'FIXME  her."'
            })
        fi

        jump label_353

    case '*':
        print({
            'english': '"No doubt."',
            'russian': 'FIXME "No doubt."'
        })
    esac

    jump label_353

label_1440:
    print({
        'english': '"My advice will cost you two gold. Do you still want it?" ',
        'russian': 'FIXME "My advice will cost you two gold. Do you still want it?" '
    })

    choice({
        'english': 'yn',
        'russian': 'FIXME yn'
    })

    case {'english': 'n'}:
    case {'russian': 'FIXME n'}:
        print({
            'english': '"Very well."',
            'russian': 'FIXME "Very well."'
        })
        jump label_353
    esac

    if less(objectsCount(byte 1, byte 88), byte 2):
        print({
            'english': '\n"Best check your purse."',
            'russian': 'FIXME \n"Best check your purse."'
        })
        jump label_353
    fi

    destroyItem(byte 1, byte 88, byte 0, byte 2)
    createItem(byte 235, byte 88, byte 0, byte 2)
    print({
        'english': '\n"Look through the books at the @Lycaeum. You might learn something ',
        'russian': 'FIXME \n"Look through the books at the @Lycaeum. You might learn something '
    })
    print({
        'english': 'useful there."',
        'russian': 'FIXME useful there."'
    })
    jump label_353

label_1676:
    print({
        'english': '"I charge six gold to cast my tiles. Are you interested?" ',
        'russian': 'FIXME "I charge six gold to cast my tiles. Are you interested?" '
    })

    choice({
        'english': 'yn',
        'russian': 'FIXME yn'
    })

    case {'english': 'n'}:
    case {'russian': 'FIXME n'}:
        print({
            'english': '"Very well."',
            'russian': 'FIXME "Very well."'
        })
        jump label_353
    esac

    if less(objectsCount(byte 1, byte 88), byte 6):
        print({
            'english': '\n"Best check your purse."',
            'russian': 'FIXME \n"Best check your purse."'
        })
        jump label_353
    fi

    destroyItem(byte 1, byte 88, byte 0, byte 6)
    createItem(byte 235, byte 88, byte 0, byte 6)
    print({
        'english': '\nFrom the folds of her cloak, she withdraws a velvet pouch.\n\n*After ',
        'russian': 'FIXME \nFrom the folds of her cloak, she withdraws a velvet pouch.\n\n*After '
    })
    print({
        'english': 'shaking it gently, she casts forth three small squares of ivory, each ',
        'russian': 'FIXME shaking it gently, she casts forth three small squares of ivory, each '
    })
    print({
        'english': 'with an image etched into its surface and a title at the bottom.',
        'russian': 'FIXME with an image etched into its surface and a title at the bottom.'
    })
    wait()

    print({
        'english': '\n\nThe tiles are:\n\n',
        'russian': 'FIXME \n\nThe tiles are:\n\n'
    })

label_2046:
    integer(value 2) = random(byte 0, byte 4)

    if equals(integer(value 2), integer(value 1)):
        jump label_2046
    fi

    printString(strings_2185, integer(value 2))
    integer(value 1) = integer(value 2)
    print({
        'english': '\n*\n"If you consult the tiles another time, perhaps they will have more',
        'russian': 'FIXME \n*\n"If you consult the tiles another time, perhaps they will have more'
    })
    print({
        'english': ' to say of your @future."',
        'russian': 'FIXME  to say of your @future."'
    })
    jump label_353

strings_2185 = [
    {
        'english': '\'Panda\', \'Coin\', and \'Bead of Glass\'.\n*\nTaynith says: "There is something made of glass that plays a very important role in your future, but the signs are unclear."*\n\n"Seek out @Penumbra. Her crystal ball should hold more of an affinity for this item."\n*\n"If you pay her enough, she can tell you more than I."',
        'russian': 'FIXME \'Panda\', \'Coin\', and \'Bead of Glass\'.\n*\nTaynith says: "There is something made of glass that plays a very important role in your future, but the signs are unclear."*\n\n"Seek out @Penumbra. Her crystal ball should hold more of an affinity for this item."\n*\n"If you pay her enough, she can tell you more than I."'
    }, // 0
    {
        'english': '\'Abyss\', \'Mountains\', and \'Maelstrom\'.\n*\nTaynith says: "This is strange."\n\n*"The tiles show that to accomplish your ends, you must go down very far, then up very far, but you will not end up back where you started."*\n\n"The \'Maelstrom\' indicates something important as well, but I cannot determine what it means."',
        'russian': 'FIXME \'Abyss\', \'Mountains\', and \'Maelstrom\'.\n*\nTaynith says: "This is strange."\n\n*"The tiles show that to accomplish your ends, you must go down very far, then up very far, but you will not end up back where you started."*\n\n"The \'Maelstrom\' indicates something important as well, but I cannot determine what it means."'
    }, // 1
    {
        'english': '\'Path\', \'War\', and \'Rogue\'.\n*\nThe \'War\' tile is particularly striking. It depicts a dragon and a tiger, each about to bite the others tail.\n*\nTaynith says: "Britannia is on a path towards all out war, that is plain enough."\n*\n"The \'Rogue\' is one who would go against the wishes of his Lord to find another path."',
        'russian': 'FIXME \'Path\', \'War\', and \'Rogue\'.\n*\nThe \'War\' tile is particularly striking. It depicts a dragon and a tiger, each about to bite the others tail.\n*\nTaynith says: "Britannia is on a path towards all out war, that is plain enough."\n*\n"The \'Rogue\' is one who would go against the wishes of his Lord to find another path."'
    }, // 2
    {
        'english': '\'Bead of Glass\', \'Maelstrom\', and \'Clever Fish\'.\n*\nTaynith frowns. "I cannot interpret this pattern. I\'m afraid you\'ll have to seek its meaning on your own."',
        'russian': 'FIXME \'Bead of Glass\', \'Maelstrom\', and \'Clever Fish\'.\n*\nTaynith frowns. "I cannot interpret this pattern. I\'m afraid you\'ll have to seek its meaning on your own."'
    }, // 3
    {
        'english': '\'Shaman\', \'Blademaster\', and \'Clever Fish\'.\n*\nTaynith says: "All of these things and more must you be to find success in your quest."',
        'russian': 'FIXME \'Shaman\', \'Blademaster\', and \'Clever Fish\'.\n*\nTaynith says: "All of these things and more must you be to find success in your quest."'
    }, // 4
]
