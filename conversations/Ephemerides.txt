source('CONVERSE.A')
index(35)

id(35)
name({
    'english': 'Ephemerides',
    'russian': 'Эферемид'
})

f3()

description:
    print({
        'english': 'a solemn man, constantly dusting and polishing the items in his shop.',
        'russian': 'сосредоточенного мужчину, который без устали протирает свои товары и стряхивает с них пыль.'
    })
    wait()

    print({
        'english': '\n',
        'russian': '\n'
    })

interaction:
    if notEquals(integer(value 32), byte 138):
        jump label_318
    fi

    print({
        'english': 'The old man never turns away from his telescope. "Shhh! Can\'t you see ',
        'russian': 'Не поворачиваясь к вам от своего телескопа, старик шикнул: "Тс-с! Разве вы не видите, '
    })
    print({
        'english': 'I\'m busy?!"',
        'russian': 'что я занят?!"'
    })
    wait()

    print({
        'english': '\n\n"Whoever you are, come back in the morning."',
        'russian': '\n\n"Кто бы вы ни были, возвращайтесь утром".'
    })
    wait()

    print({
        'english': '\n\nThe old man adjusts the telescope, exclaims "Aha!" and starts ',
        'russian': '\n\nПоправив телескоп, старик восклицает "Ага!" и начинает '
    })
    print({
        'english': 'scribbling on a scroll.\n',
        'russian': 'что-то записывать в свиток.\n'
    })
    bye()

label_318:
    integer(value 0) = partyHasObject(byte 48, byte 0)

    if and(and(notEquals(integer(value 0), word 32769), hasBit(byte 235, byte 7)), equals(hasBit(byte 235, byte 6), byte 0)):
        jump label_3366
    fi

label_357:
    print({
        'english': '"Ahem. Yes, what can I help you with, ',
        'russian': '"Кхм. Да, чем могу быть полезен, '
    })

    if equals(integer(value 16), byte 1):
        print({
            'english': 'madam?"\n',
            'russian': 'мадам?"\n'
        })

    else:
        print({
            'english': 'sir?"\n',
            'russian': 'сэр?"\n'
        })
    fi

label_418:
    ask()

    case 'name':
    case {'russian': 'имя'}:
        print({
            'english': '"I am Ephemerides."\n',
            'russian': '"Меня зовут Эферемид".\n'
        })
        setBit(byte 235, value 0)
        jump label_418

    case 'job':
    case {'russian': 'раб'}:
        print({
            'english': '"I am an astronomer. More precisely, I calculate movements of the ',
            'russian': '"Я астроном. Если точнее, то я вычисляю движение '
        })
        print({
            'english': 'stars, phases of the @moons..."',
            'russian': 'звёзд, фазы @лун..."'
        })
        wait()

        print({
            'english': '\n\n"My field of specialization is @tidal predictions."',
            'russian': '\n\n"Я специализируюсь на предсказании @приливов".'
        })
        wait()

        print({
            'english': '\n\n"I also make various @glasswares and @instruments."\n',
            'russian': '\n\n"А ещё я изготавливаю различные изделия из @стекла и @приборы".\n'
        })
        jump label_418

    case 'inst':
    case {'russian': 'приб'}:
        print({
            'english': '"Yes, @sextants mostly."\n',
            'russian': '"Да, в основном, это @секстанты".\n'
        })
        jump label_418

    case 'glas':
    case {'russian': 'стек'}:
        print({
            'english': '"Lenses and the like."\n',
            'russian': '"Линзы и тому подобное".\n'
        })
        jump label_418

    case 'buy':
    case {'russian': 'куп'}:
    case 'sex':
    case {'russian': 'секс'}:
        integer(value 4) = byte 0
        jump label_3941

    case 'tida':
    case {'russian': 'прил'}:
    case 'pred':
    case {'russian': 'пред'}:
    case 'fiel':
    case {'russian': 'спец'}:
        print({
            'english': '"Lord British has requested the publication of an almanac for use by ',
            'russian': '"Лорд Бритиш заказал выпуск альманаха для '
        })
        print({
            'english': 'the general populace."',
            'russian': 'простого народа".'
        })
        wait()

        print({
            'english': '\n\n"It will contain high tides, low tides, ebb tides, flood tides, ',
            'russian': '\n\n"В нём будут содержаться записи о больших и малых водах, о приливах и отливах, '
        })
        print({
            'english': '@spring tides, and @neap tides."\n',
            'russian': 'а также о @сизигийных и @слабых приливах".\n'
        })
        jump label_418

    case 'tide':
    case {'russian': 'прил'}:
        print({
            'english': '"Britannia\'s tides are a function of the two @moons, Felucca and ',
            'russian': '"Волнами Британии управляют две @луны, Фелукка и '
        })
        print({
            'english': 'Trammel, interacting with our world, Sosaria."\n',
            'russian': 'Траммел, которые взаимодействуют с нашим миром, Сосарией".\n'
        })
        jump label_418

    case 'sosa':
    case {'russian': 'соса'}:
    case 'felu':
    case {'russian': 'фелу'}:
    case 'tram':
    case {'russian': 'трам'}:
    case 'moon':
    case {'russian': 'мун'}:
    case 'sosa':
    case {'russian': 'соса'}:
        print({
            'english': '"I plan to publish a paper about how the world is flat, to dispel all ',
            'russian': '"Я собираюсь опубликовать статью о том, что наш мир плоский, чтобы развеять все '
        })
        print({
            'english': 'this foolish talk to the contrary."',
            'russian': 'глупости, утверждающие обратное".'
        })
        wait()

        print({
            'english': '\n\n"Afterwards, I will construct a model of how it all works: an ',
            'russian': '\n\n"А потом я построю рабочую модель нашего мира - '
        })
        print({
            'english': '@orrery."\n',
            'russian': '@модель звёздной системы".\n'
        })
        jump label_418

    case 'orre':
    case {'russian': 'моде'}:
        print({
            'english': 'Pleased with your interest, Ephemerides shows you papers with plans ',
            'russian': 'Польщённый вашей заинтересованностью, Эферемид показывает планы со схемой '
        })
        print({
            'english': 'for a clockwork model of the Sosarian system.',
            'russian': 'звёздной системы Сосарии, работающей на часовом механизме.'
        })
        wait()

        print({
            'english': '\n\n"This, ahem, flat piece is Britannia. Each moon would exert a pull ',
            'russian': '\n\n"Вот эта, кхм, плоская земля - это Британия. Каждая луна влияет на '
        })
        print({
            'english': 'on the oceans thus, resulting in the tides."',
            'russian': 'океаны, что приводит к возникновению приливов и отливов".'
        })
        wait()

        print({
            'english': '\n\n"You turn that little handle there to get it to go!"*\n\nThe normally ',
            'russian': '\n\n"Чтобы привести механизм в движение, нужно повернуть эту маленькую ручку!"*\n\nОбычно '
        })
        print({
            'english': 'staid Ephemerides is practically giggling with glee.\n',
            'russian': 'невозмутимый Эфемерид начинает радостно хихикать.\n'
        })
        jump label_418

    case 'roun':
    case {'russian': 'круг'}:
        print({
            'english': '"Absurd!"\n',
            'russian': '"Вздор!"\n'
        })
        jump label_418

    case 'neap':
    case {'russian': 'слаб'}:
        print({
            'english': '"Low and high tide marks are close together. The planets are in ',
            'russian': '"Когда отметки низкого и высокого приливов находятся близко, небесные тела находятся в '
        })
        print({
            'english': '@quadrature."\n',
            'russian': '@квадратуре".\n'
        })
        jump label_418

    case 'quad':
    case {'russian': 'квад'}:
        print({
            'english': '"Angular separation of two celestial bodies (as measured from a third)',
            'russian': '"Это когда угловое расстояние между двумя небесными телами (измеренное относительно третьего)'
        })
        print({
            'english': ' being ninety degrees, of course. A very safe @tide."\n',
            'russian': ' составляет девяносто градусов, то есть будет очень безопасный @прилив".\n'
        })
        jump label_418

    case 'spri':
    case {'russian': 'сизи'}:
        print({
            'english': '"The opposite of a neap tide; the sun, earth and moons are all ',
            'russian': '"Это противоположность слабому приливу; в этот момент солнце, земля и луны находятся '
        })
        print({
            'english': 'aligned."',
            'russian': 'в одном ряду".'
        })
        wait()

        print({
            'english': '\n\n"Thus, lines of low and high tide are far apart."',
            'russian': '\n\n"Таким образом, линии низкого и высокого приливов далеко друг от друга".'
        })
        wait()

        print({
            'english': '\n\n"Once I construct my @orrery, I\'d be able to demonstrate the ',
            'russian': '\n\n"Когда я построю свою @модель, я смогу продемонстрировать, '
        })
        print({
            'english': 'principles involved."\n',
            'russian': 'как это работает".\n'
        })
        jump label_418

    case 'vort':
    case {'russian': 'водо'}:
    case 'lens':
    case {'russian': 'линз'}:
    case 'conc':
    case {'russian': 'вогн'}:
        if hasBit(byte 235, byte 6):
            print({
                'english': '"I hope the lens I made you will prove suitable."\n',
                'russian': '"Надеюсь, что вам пригодится линза, которую я изготовил".\n'
            })
            jump label_418
        fi

        if and(equals(partyHasObject(word 396, byte 0), word 32769), equals(hasBit(byte 235, byte 7), byte 0)):
            print({
                'english': '"What sort of lens do you want?"\n',
                'russian': '"Линза какого типа вам нужна?"\n'
            })
            jump label_418
        fi

        integer(value 0) = partyHasObject(word 396, byte 0)

        if equals(integer(value 0), word 32769):
            print({
                'english': '"When you bring me a glass @sword, I should be able to duplicate your ',
                'russian': '"Когда вы принесёте стеклянный @меч, у меня будет возможность создать дубликат '
            })
            print({
                'english': 'lens for you."\n',
                'russian': 'линзы для вас".\n'
            })
            jump label_418
        fi

        print({
            'english': '"Ooooh, let me see it... That\'s a very interesting lens."',
            'russian': '"О-ох, позвольте взглянуть... Это очень интересная линза".'
        })
        wait()

        print({
            'english': '\n\n"You need a concave copy of it? Let me think..."',
            'russian': '\n\n"Так вам нужна вогнутая копия этой линзы? Дайте-ка подумать..."'
        })
        wait()

        print({
            'english': '\n\n"It would be very tricky to duplicate, being magical in nature, but ',
            'russian': '\n\n"Было бы сложновато воспроизвести вещь магическую по своей сути, но '
        })
        print({
            'english': 'I believe I might be able to do it."',
            'russian': 'я уверен, что у меня получилось бы".'
        })
        wait()

        print({
            'english': '\n\n"The material and the nature of the enchantment appear similar to ',
            'russian': '\n\n"Кажется, используются и материал, и зачарование те же, что '
        })
        print({
            'english': 'those involved in the making of glass swords."',
            'russian': 'и для изготовления стеклянных мечей".'
        })
        wait()

        print({
            'english': '\n\n"If I could keep this to analyze while you go get me a glass sword, ',
            'russian': '\n\n"Если оставите линзу на анализ на время, пока добываете стеклянный меч, '
        })
        print({
            'english': 'I\'ll try and make a copy for you."',
            'russian': 'я попытаюсь изготовить дубликат".'
        })
        wait()

        setBit(byte 235, byte 7)
        moveItem(word 396, byte 0, integer(value 0), byte 235)
        print({
            'english': '\n\nBefore you can protest, he pockets the lens. "Let me know when you ',
            'russian': '\n\nПрежде чем вы успеваете возразить, линза исчезает в его кармане. "Дайте мне знать, когда '
        })
        print({
            'english': 'have the glass @sword."\n',
            'russian': 'завладеете стеклянным @мечом".\n'
        })
        jump label_418

    case 'swor':
    case {'russian': 'меч'}:
        if and(and(notEquals(partyHasObject(byte 48, byte 0), word 32769), hasBit(byte 235, byte 7)), equals(hasBit(byte 235, byte 6), byte 0)):
            jump label_3366
        fi

        print({
            'english': '"I once heard of a @master glassblower who could make glass swords..."',
            'russian': '"Мне как-то рассказывали об @искусном стеклодуве, который мог создавать стеклянные мечи..."'
        })
        print({
            'english': '\n',
            'russian': '\n'
        })
        jump label_418

    case 'mast':
    case {'russian': 'иску'}:
        print({
            'english': '"Minoc is the logical place to look. That town is filled with master ',
            'russian': '"Будет логично поискать его в Миноке - там живёт очень много умелых '
        })
        print({
            'english': 'craftsmen."',
            'russian': 'ремесленников".'
        })
        wait()

        print({
            'english': '\n\n"Why, I once heard of a man from Minoc who built a @flying machine!"',
            'russian': '\n\n"И ведь да! Поговаривали даже, что в Миноке построили @летающую машину!"'
        })
        print({
            'english': '\n',
            'russian': '\n'
        })
        jump label_418

    case 'fly':
    case {'russian': 'лет'}:
    case 'mach':
    case {'russian': 'маш'}:
        print({
            'english': '"Must have been a fairy tale, of course."\n',
            'russian': '"Конечно, то была чья-то выдумка".\n'
        })
        jump label_418

    case 'bye':
    case {'russian': 'пока'}:
        print({
            'english': '"Goodbye, $G. It was nice talking with you."\n',
            'russian': '"Прощайте, $G. Благодарю за приятную беседу".\n'
        })
        bye()

    case '*':
        print({
            'english': '"That I cannot help you with."\n',
            'russian': '"Ничем не могу помочь".\n'
        })
        jump label_418
    esac

label_3366:
    print({
        'english': '"Ah, you\'ve brought me a glass sword! Let me just get your lens..."',
        'russian': '"О, вы принесли стеклянный меч! А где же ваша линза..."'
    })
    wait()

    print({
        'english': '\n\nHe fumbles through his pockets.',
        'russian': '\n\nОн начинает шарить руками в карманах.'
    })
    wait()

    print({
        'english': '\n\n"Oh no! I seem to have lost the lens!"',
        'russian': '\n\n"О, нет! Кажется, я потерял её!"'
    })
    wait()

    print({
        'english': '\n\n"Just kidding... Here it is. Now I\'ll melt down the glass sword and ',
        'russian': '\n\n"Шутка!.. Вот она. А теперь я расплавлю стеклянный меч и '
    })
    print({
        'english': 'try to cast a lens for you."',
        'russian': 'попробую изготовить линзу для вас".'
    })
    wait()

    print({
        'english': '\n\nYou watch as he works, intently focused on his task. Finally he ',
        'russian': '\n\nВы наблюдаете, как он сосредоточенно принялся за дело. Наконец он '
    })
    print({
        'english': 'pronounces the job a success.',
        'russian': 'объявляет, что работа успешно завершена.'
    })
    wait()

    print({
        'english': '\n\n"Here\'s your lens back, and the duplicate. There\'s no charge - the ',
        'russian': '\n\n"Держите линзу и её дубликат. Мне ничего взамен не нужно - '
    })
    print({
        'english': 'challenge of the task was reward enough."',
        'russian': 'сам этот вызов являлся достаточной наградой".'
    })
    wait()

    print({
        'english': '\n\n"I don\'t know what you need these lenses for, but I wish you luck!"\n',
        'russian': '\n\n"Не знаю, для чего могут понадобиться эти линзы, но я желаю вам удачи!"\n'
    })
    setBit(byte 235, byte 6)
    destroyItem(partyHasObject(byte 48, byte 0), byte 48, byte 0, byte 1)
    moveItem(word 396, byte 0, byte 235, byte 1)
    createItem(byte 1, word 394, byte 0, byte 1)
    jump label_418

label_3941:
    if equals(integer(value 23), byte 0):
        integer(value 3) = byte 0
        jump label_4087
    fi

label_3961:
    integer(value 0) = byte 0
    integer(value 1) = byte 1

label_3975:
    look(character(integer(value 0), byte 0))
    print({
        'english': '#1. $Y\n',
        'russian': '#1. $Y\n'
    })
    integer(value 0) = plus(integer(value 0), byte 1)
    integer(value 1) = plus(integer(value 1), byte 1)

    if lessOrEquals(integer(value 0), integer(value 23)):
        jump label_3975
    fi

    print({
        'english': '"Which of you?" ',
        'russian': '"Кто из вас?" '
    })
    inputDigit(integer(value 3))

    if equals(integer(value 3), byte 0):
        jump label_357
    fi

    integer(value 3) = minus(integer(value 3), byte 1)

    if greater(integer(value 3), integer(value 23)):
        jump label_3961
    fi

    integer(value 3) = character(integer(value 3), byte 0)

label_4087:
    string(value 0) = data(strings_4491, integer(value 4))
    look(integer(value 3))

    if less(plus(canCarry(integer(value 3)), weight(byte 88, data(integers_4479, integer(value 4)))), weight(data(integers_4485, integer(value 4)), byte 1)):
        print({
            'english': '$N looks at $Y. "You haven\'t any room in your pack."',
            'russian': '$N смотрит на персонажа $Y. "У вас нет места в рюкзаке".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_357
    fi

    if less(objectsCount(integer(value 3), byte 88), data(integers_4479, integer(value 4))):
        print({
            'english': '$N looks at $Y. "`$0s cost more gold than you have."',
            'russian': '$N смотрит на персонажа $Y. "`$0, несколько их стоят больше золота, чем у вас есть".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_357
    fi

    integer(value 0) = data(integers_4479, integer(value 4))
    look(integer(value 3))
    print({
        'english': '$N looks at $Y. "It\'ll cost you #0 gold for a $0. Do you want one?" ',
        'russian': '$N смотрит на персонажа $Y. "Это будет стоить #0 золотых за $0. Хотите купить?" '
    })

    choice({
        'english': 'yn',
        'russian': 'дн'
    })

    case 'n':
    case {'russian': 'FIXME n'}:
        print({
            'english': '$N frowns at $Y, "That was a good price."',
            'russian': '$N хмуро смотрит на персонажа $Y. "Это была хорошая цена".'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_357
    esac

    case 'y':
    case {'russian': 'д'}:
        destroyItem(integer(value 3), byte 88, byte 0, data(integers_4479, integer(value 4)))
        createItem(integer(value 3), data(integers_4485, integer(value 4)), byte 0, byte 1)
        print({
            'english': 'He hands $Y a $0.',
            'russian': 'Он передаёт персонажу $Y $0.'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': '\n\n'
        })
        jump label_357
    esac

integers_4479 = [
    30, // 0
    40, // 1
    50, // 2
]

integers_4485 = [
    93,  // 0
    154, // 1
    155, // 2
]

strings_4491 = [
    {
        'english': 'sextant',
        'russian': 'секстант'
    }, // 0
    {
        'english': 'telescope',
        'russian': 'телескоп'
    }, // 1
    {
        'english': 'crystal ball',
        'russian': 'хрустальный шар'
    }, // 2
]
