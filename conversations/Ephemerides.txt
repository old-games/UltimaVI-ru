source('CONVERSE.A')
index(35)

id(35)
name({
    'english': 'Ephemerides',
    'russian': 'FIXME Ephemerides'
})

f3()

description:
    print({
        'english': 'a solemn man, constantly dusting and polishing the items in his shop.',
        'russian': 'FIXME a solemn man, constantly dusting and polishing the items in his shop.'
    })
    wait()

    print({
        'english': '\n',
        'russian': 'FIXME \n'
    })

interaction:
    if notEquals(integer(value 32), byte 138):
        jump label_318
    fi

    print({
        'english': 'The old man never turns away from his telescope. "Shhh! Can\'t you see ',
        'russian': 'FIXME The old man never turns away from his telescope. "Shhh! Can\'t you see '
    })
    print({
        'english': 'I\'m busy?!"',
        'russian': 'FIXME I\'m busy?!"'
    })
    wait()

    print({
        'english': '\n\n"Whoever you are, come back in the morning."',
        'russian': 'FIXME \n\n"Whoever you are, come back in the morning."'
    })
    wait()

    print({
        'english': '\n\nThe old man adjusts the telescope, exclaims "Aha!" and starts ',
        'russian': 'FIXME \n\nThe old man adjusts the telescope, exclaims "Aha!" and starts '
    })
    print({
        'english': 'scribbling on a scroll.\n',
        'russian': 'FIXME scribbling on a scroll.\n'
    })
    bye()

label_318:
    integer(value 0) = partyHasObject(byte 48, byte 0)

    if and(and(notEquals(integer(value 0), word 32769), hasBit(byte 235, byte 7)), equals(hasBit(byte 235, byte 6), byte 0)):
        jump label_3366
    fi

label_357:
    print({
        'english': '"Ahem. Yes, what can I help you with, ',
        'russian': 'FIXME "Ahem. Yes, what can I help you with, '
    })

    if equals(integer(value 16), byte 1):
        print({
            'english': 'madam?"\n',
            'russian': 'FIXME madam?"\n'
        })

    else:
        print({
            'english': 'sir?"\n',
            'russian': 'FIXME sir?"\n'
        })
    fi

label_418:
    ask()

    case {'english': 'name'}:
    case {'russian': 'FIXME name'}:
        print({
            'english': '"I am Ephemerides."\n',
            'russian': 'FIXME "I am Ephemerides."\n'
        })
        setBit(byte 235, value 0)
        jump label_418

    case {'english': 'job'}:
    case {'russian': 'FIXME job'}:
        print({
            'english': '"I am an astronomer. More precisely, I calculate movements of the ',
            'russian': 'FIXME "I am an astronomer. More precisely, I calculate movements of the '
        })
        print({
            'english': 'stars, phases of the @moons..."',
            'russian': 'FIXME stars, phases of the @moons..."'
        })
        wait()

        print({
            'english': '\n\n"My field of specialization is @tidal predictions."',
            'russian': 'FIXME \n\n"My field of specialization is @tidal predictions."'
        })
        wait()

        print({
            'english': '\n\n"I also make various @glasswares and @instruments."\n',
            'russian': 'FIXME \n\n"I also make various @glasswares and @instruments."\n'
        })
        jump label_418

    case {'english': 'inst'}:
    case {'russian': 'FIXME inst'}:
        print({
            'english': '"Yes, @sextants mostly."\n',
            'russian': 'FIXME "Yes, @sextants mostly."\n'
        })
        jump label_418

    case {'english': 'glas'}:
    case {'russian': 'FIXME glas'}:
        print({
            'english': '"Lenses and the like."\n',
            'russian': 'FIXME "Lenses and the like."\n'
        })
        jump label_418

    case {'english': 'buy'}:
    case {'russian': 'FIXME buy'}:
    case {'english': 'sex'}:
    case {'russian': 'FIXME sex'}:
        integer(value 4) = byte 0
        jump label_3941

    case {'english': 'fiel'}:
    case {'russian': 'FIXME fiel'}:
    case {'english': 'pred'}:
    case {'russian': 'FIXME pred'}:
    case {'english': 'tida'}:
    case {'russian': 'FIXME tida'}:
        print({
            'english': '"Lord British has requested the publication of an almanac for use by ',
            'russian': 'FIXME "Lord British has requested the publication of an almanac for use by '
        })
        print({
            'english': 'the general populace."',
            'russian': 'FIXME the general populace."'
        })
        wait()

        print({
            'english': '\n\n"It will contain high tides, low tides, ebb tides, flood tides, ',
            'russian': 'FIXME \n\n"It will contain high tides, low tides, ebb tides, flood tides, '
        })
        print({
            'english': '@spring tides, and @neap tides."\n',
            'russian': 'FIXME @spring tides, and @neap tides."\n'
        })
        jump label_418

    case {'english': 'tide'}:
    case {'russian': 'FIXME tide'}:
        print({
            'english': '"Britannia\'s tides are a function of the two @moons, Felucca and ',
            'russian': 'FIXME "Britannia\'s tides are a function of the two @moons, Felucca and '
        })
        print({
            'english': 'Trammel, interacting with our world, Sosaria."\n',
            'russian': 'FIXME Trammel, interacting with our world, Sosaria."\n'
        })
        jump label_418

    case {'english': 'felu'}:
    case {'russian': 'FIXME felu'}:
    case {'english': 'moon'}:
    case {'russian': 'FIXME moon'}:
    case {'english': 'sosa'}:
    case {'russian': 'FIXME sosa'}:
    case {'english': 'sosa'}:
    case {'russian': 'FIXME sosa'}:
    case {'english': 'tram'}:
    case {'russian': 'FIXME tram'}:
        print({
            'english': '"I plan to publish a paper about how the world is flat, to dispel all ',
            'russian': 'FIXME "I plan to publish a paper about how the world is flat, to dispel all '
        })
        print({
            'english': 'this foolish talk to the contrary."',
            'russian': 'FIXME this foolish talk to the contrary."'
        })
        wait()

        print({
            'english': '\n\n"Afterwards, I will construct a model of how it all works: an ',
            'russian': 'FIXME \n\n"Afterwards, I will construct a model of how it all works: an '
        })
        print({
            'english': '@orrery."\n',
            'russian': 'FIXME @orrery."\n'
        })
        jump label_418

    case {'english': 'orre'}:
    case {'russian': 'FIXME orre'}:
        print({
            'english': 'Pleased with your interest, Ephemerides shows you papers with plans ',
            'russian': 'FIXME Pleased with your interest, Ephemerides shows you papers with plans '
        })
        print({
            'english': 'for a clockwork model of the Sosarian system.',
            'russian': 'FIXME for a clockwork model of the Sosarian system.'
        })
        wait()

        print({
            'english': '\n\n"This, ahem, flat piece is Britannia. Each moon would exert a pull ',
            'russian': 'FIXME \n\n"This, ahem, flat piece is Britannia. Each moon would exert a pull '
        })
        print({
            'english': 'on the oceans thus, resulting in the tides."',
            'russian': 'FIXME on the oceans thus, resulting in the tides."'
        })
        wait()

        print({
            'english': '\n\n"You turn that little handle there to get it to go!"*\n\nThe normally ',
            'russian': 'FIXME \n\n"You turn that little handle there to get it to go!"*\n\nThe normally '
        })
        print({
            'english': 'staid Ephemerides is practically giggling with glee.\n',
            'russian': 'FIXME staid Ephemerides is practically giggling with glee.\n'
        })
        jump label_418

    case {'english': 'roun'}:
    case {'russian': 'FIXME roun'}:
        print({
            'english': '"Absurd!"\n',
            'russian': 'FIXME "Absurd!"\n'
        })
        jump label_418

    case {'english': 'neap'}:
    case {'russian': 'FIXME neap'}:
        print({
            'english': '"Low and high tide marks are close together. The planets are in ',
            'russian': 'FIXME "Low and high tide marks are close together. The planets are in '
        })
        print({
            'english': '@quadrature."\n',
            'russian': 'FIXME @quadrature."\n'
        })
        jump label_418

    case {'english': 'quad'}:
    case {'russian': 'FIXME quad'}:
        print({
            'english': '"Angular separation of two celestial bodies (as measured from a third)',
            'russian': 'FIXME "Angular separation of two celestial bodies (as measured from a third)'
        })
        print({
            'english': ' being ninety degrees, of course. A very safe @tide."\n',
            'russian': 'FIXME  being ninety degrees, of course. A very safe @tide."\n'
        })
        jump label_418

    case {'english': 'spri'}:
    case {'russian': 'FIXME spri'}:
        print({
            'english': '"The opposite of a neap tide; the sun, earth and moons are all ',
            'russian': 'FIXME "The opposite of a neap tide; the sun, earth and moons are all '
        })
        print({
            'english': 'aligned."',
            'russian': 'FIXME aligned."'
        })
        wait()

        print({
            'english': '\n\n"Thus, lines of low and high tide are far apart."',
            'russian': 'FIXME \n\n"Thus, lines of low and high tide are far apart."'
        })
        wait()

        print({
            'english': '\n\n"Once I construct my @orrery, I\'d be able to demonstrate the ',
            'russian': 'FIXME \n\n"Once I construct my @orrery, I\'d be able to demonstrate the '
        })
        print({
            'english': 'principles involved."\n',
            'russian': 'FIXME principles involved."\n'
        })
        jump label_418

    case {'english': 'conc'}:
    case {'russian': 'FIXME conc'}:
    case {'english': 'lens'}:
    case {'russian': 'FIXME lens'}:
    case {'english': 'vort'}:
    case {'russian': 'FIXME vort'}:
        if hasBit(byte 235, byte 6):
            print({
                'english': '"I hope the lens I made you will prove suitable."\n',
                'russian': 'FIXME "I hope the lens I made you will prove suitable."\n'
            })
            jump label_418
        fi

        if and(equals(partyHasObject(word 396, byte 0), word 32769), equals(hasBit(byte 235, byte 7), byte 0)):
            print({
                'english': '"What sort of lens do you want?"\n',
                'russian': 'FIXME "What sort of lens do you want?"\n'
            })
            jump label_418
        fi

        integer(value 0) = partyHasObject(word 396, byte 0)

        if equals(integer(value 0), word 32769):
            print({
                'english': '"When you bring me a glass @sword, I should be able to duplicate your ',
                'russian': 'FIXME "When you bring me a glass @sword, I should be able to duplicate your '
            })
            print({
                'english': 'lens for you."\n',
                'russian': 'FIXME lens for you."\n'
            })
            jump label_418
        fi

        print({
            'english': '"Ooooh, let me see it... That\'s a very interesting lens."',
            'russian': 'FIXME "Ooooh, let me see it... That\'s a very interesting lens."'
        })
        wait()

        print({
            'english': '\n\n"You need a concave copy of it? Let me think..."',
            'russian': 'FIXME \n\n"You need a concave copy of it? Let me think..."'
        })
        wait()

        print({
            'english': '\n\n"It would be very tricky to duplicate, being magical in nature, but ',
            'russian': 'FIXME \n\n"It would be very tricky to duplicate, being magical in nature, but '
        })
        print({
            'english': 'I believe I might be able to do it."',
            'russian': 'FIXME I believe I might be able to do it."'
        })
        wait()

        print({
            'english': '\n\n"The material and the nature of the enchantment appear similar to ',
            'russian': 'FIXME \n\n"The material and the nature of the enchantment appear similar to '
        })
        print({
            'english': 'those involved in the making of glass swords."',
            'russian': 'FIXME those involved in the making of glass swords."'
        })
        wait()

        print({
            'english': '\n\n"If I could keep this to analyze while you go get me a glass sword, ',
            'russian': 'FIXME \n\n"If I could keep this to analyze while you go get me a glass sword, '
        })
        print({
            'english': 'I\'ll try and make a copy for you."',
            'russian': 'FIXME I\'ll try and make a copy for you."'
        })
        wait()

        setBit(byte 235, byte 7)
        giveItem(word 396, byte 0, integer(value 0), byte 235)
        print({
            'english': '\n\nBefore you can protest, he pockets the lens. "Let me know when you ',
            'russian': 'FIXME \n\nBefore you can protest, he pockets the lens. "Let me know when you '
        })
        print({
            'english': 'have the glass @sword."\n',
            'russian': 'FIXME have the glass @sword."\n'
        })
        jump label_418

    case {'english': 'swor'}:
    case {'russian': 'FIXME swor'}:
        if and(and(notEquals(partyHasObject(byte 48, byte 0), word 32769), hasBit(byte 235, byte 7)), equals(hasBit(byte 235, byte 6), byte 0)):
            jump label_3366
        fi

        print({
            'english': '"I once heard of a @master glassblower who could make glass swords..."',
            'russian': 'FIXME "I once heard of a @master glassblower who could make glass swords..."'
        })
        print({
            'english': '\n',
            'russian': 'FIXME \n'
        })
        jump label_418

    case {'english': 'mast'}:
    case {'russian': 'FIXME mast'}:
        print({
            'english': '"Minoc is the logical place to look. That town is filled with master ',
            'russian': 'FIXME "Minoc is the logical place to look. That town is filled with master '
        })
        print({
            'english': 'craftsmen."',
            'russian': 'FIXME craftsmen."'
        })
        wait()

        print({
            'english': '\n\n"Why, I once heard of a man from Minoc who built a @flying machine!"',
            'russian': 'FIXME \n\n"Why, I once heard of a man from Minoc who built a @flying machine!"'
        })
        print({
            'english': '\n',
            'russian': 'FIXME \n'
        })
        jump label_418

    case {'english': 'fly'}:
    case {'russian': 'FIXME fly'}:
    case {'english': 'mach'}:
    case {'russian': 'FIXME mach'}:
        print({
            'english': '"Must have been a fairy tale, of course."\n',
            'russian': 'FIXME "Must have been a fairy tale, of course."\n'
        })
        jump label_418

    case {'english': 'bye'}:
    case {'russian': 'FIXME bye'}:
        print({
            'english': '"Goodbye, $G. It was nice talking with you."\n',
            'russian': 'FIXME "Goodbye, $G. It was nice talking with you."\n'
        })
        bye()

    case '*':
        print({
            'english': '"That I cannot help you with."\n',
            'russian': 'FIXME "That I cannot help you with."\n'
        })
        jump label_418
    esac

label_3366:
    print({
        'english': '"Ah, you\'ve brought me a glass sword! Let me just get your lens..."',
        'russian': 'FIXME "Ah, you\'ve brought me a glass sword! Let me just get your lens..."'
    })
    wait()

    print({
        'english': '\n\nHe fumbles through his pockets.',
        'russian': 'FIXME \n\nHe fumbles through his pockets.'
    })
    wait()

    print({
        'english': '\n\n"Oh no! I seem to have lost the lens!"',
        'russian': 'FIXME \n\n"Oh no! I seem to have lost the lens!"'
    })
    wait()

    print({
        'english': '\n\n"Just kidding... Here it is. Now I\'ll melt down the glass sword and ',
        'russian': 'FIXME \n\n"Just kidding... Here it is. Now I\'ll melt down the glass sword and '
    })
    print({
        'english': 'try to cast a lens for you."',
        'russian': 'FIXME try to cast a lens for you."'
    })
    wait()

    print({
        'english': '\n\nYou watch as he works, intently focused on his task. Finally he ',
        'russian': 'FIXME \n\nYou watch as he works, intently focused on his task. Finally he '
    })
    print({
        'english': 'pronounces the job a success.',
        'russian': 'FIXME pronounces the job a success.'
    })
    wait()

    print({
        'english': '\n\n"Here\'s your lens back, and the duplicate. There\'s no charge - the ',
        'russian': 'FIXME \n\n"Here\'s your lens back, and the duplicate. There\'s no charge - the '
    })
    print({
        'english': 'challenge of the task was reward enough."',
        'russian': 'FIXME challenge of the task was reward enough."'
    })
    wait()

    print({
        'english': '\n\n"I don\'t know what you need these lenses for, but I wish you luck!"\n',
        'russian': 'FIXME \n\n"I don\'t know what you need these lenses for, but I wish you luck!"\n'
    })
    setBit(byte 235, byte 6)
    destroyItem(partyHasObject(byte 48, byte 0), byte 48, byte 0, byte 1)
    giveItem(word 396, byte 0, byte 235, byte 1)
    createItem(byte 1, word 394, byte 0, byte 1)
    jump label_418

label_3941:
    if equals(integer(value 23), byte 0):
        integer(value 3) = byte 0
        jump label_4087
    fi

label_3961:
    integer(value 0) = byte 0
    integer(value 1) = byte 1

label_3975:
    look(character(integer(value 0), byte 0))
    print({
        'english': '#1. $Y\n',
        'russian': 'FIXME #1. $Y\n'
    })
    integer(value 0) = plus(integer(value 0), byte 1)
    integer(value 1) = plus(integer(value 1), byte 1)

    if lessOrEquals(integer(value 0), integer(value 23)):
        jump label_3975
    fi

    print({
        'english': '"Which of you?" ',
        'russian': 'FIXME "Which of you?" '
    })
    inputInteger(integer(value 3))

    if equals(integer(value 3), byte 0):
        jump label_357
    fi

    integer(value 3) = minus(integer(value 3), byte 1)

    if greater(integer(value 3), integer(value 23)):
        jump label_3961
    fi

    integer(value 3) = character(integer(value 3), byte 0)

label_4087:
    string(value 0) = data(strings_4491, integer(value 4))
    look(integer(value 3))

    if less(plus(canCarry(integer(value 3)), weight(byte 88, data(integers_4479, integer(value 4)))), weight(data(integers_4485, integer(value 4)), byte 1)):
        print({
            'english': '$N looks at $Y. "You haven\'t any room in your pack."',
            'russian': 'FIXME $N looks at $Y. "You haven\'t any room in your pack."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_357
    fi

    if less(objectsCount(integer(value 3), byte 88), data(integers_4479, integer(value 4))):
        print({
            'english': '$N looks at $Y. "`$0s cost more gold than you have."',
            'russian': 'FIXME $N looks at $Y. "`$0s cost more gold than you have."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_357
    fi

    integer(value 0) = data(integers_4479, integer(value 4))
    look(integer(value 3))
    print({
        'english': '$N looks at $Y. "It\'ll cost you #0 gold for a $0. Do you want one?" ',
        'russian': 'FIXME $N looks at $Y. "It\'ll cost you #0 gold for a $0. Do you want one?" '
    })

    choice({
        'english': 'yn',
        'russian': 'FIXME yn'
    })

    case {'english': 'n'}:
    case {'russian': 'FIXME n'}:
        print({
            'english': '$N frowns at $Y, "That was a good price."',
            'russian': 'FIXME $N frowns at $Y, "That was a good price."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_357
    esac

    case {'english': 'y'}:
    case {'russian': 'FIXME y'}:
        destroyItem(integer(value 3), byte 88, byte 0, data(integers_4479, integer(value 4)))
        createItem(integer(value 3), data(integers_4485, integer(value 4)), byte 0, byte 1)
        print({
            'english': 'He hands $Y a $0.',
            'russian': 'FIXME He hands $Y a $0.'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_357
    esac

integers_4479 = [
    30, // 0
    40, // 1
    50, // 2
]

integers_4485 = [
    93,  // 0
    154, // 1
    155, // 2
]

strings_4491 = [
    {
        'english': 'sextant',
        'russian': 'FIXME sextant'
    }, // 0
    {
        'english': 'telescope',
        'russian': 'FIXME telescope'
    }, // 1
    {
        'english': 'crystal ball',
        'russian': 'FIXME crystal ball'
    }, // 2
]
