source('CONVERSE.A')
index(88)

id(88)
name({
    'english': 'Horance',
    'russian': 'FIXME Horance'
})

description:
    print({
        'english': 'a bent, aging man with a scraggly beard and few teeth.',
        'russian': 'FIXME a bent, aging man with a scraggly beard and few teeth.'
    })

    f3()

interaction:
    if hasBit(byte 235, byte 7):
        print({
            'english': '\n"Once they came for wanting,',
            'russian': 'FIXME \n"Once they came for wanting,'
        })
        wait()

        print({
            'english': '\nTwice they came to see,',
            'russian': 'FIXME \nTwice they came to see,'
        })
        wait()

        print({
            'english': '\nIf I am relenting,',
            'russian': 'FIXME \nIf I am relenting,'
        })
        wait()

        print({
            'english': '\nIn my mystery."',
            'russian': 'FIXME \nIn my mystery."'
        })

    else:
        print({
            'english': '\n"Dogs are at my doorstep,',
            'russian': 'FIXME \n"Dogs are at my doorstep,'
        })
        wait()

        print({
            'english': '\nYapping at my heels.',
            'russian': 'FIXME \nYapping at my heels.'
        })
        wait()

        print({
            'english': '\nNo way to ignore them.',
            'russian': 'FIXME \nNo way to ignore them.'
        })
        wait()

        print({
            'english': '\nJust pretend that they are eels."',
            'russian': 'FIXME \nJust pretend that they are eels."'
        })
        setBit(byte 235, byte 7)
    fi

label_280:
    print({
        'english': '\n',
        'russian': 'FIXME \n'
    })

label_281:
    ask()

    case {'english': buy'}:
    case {'russian': 'FIXME buy'}:
    case {'english': reag'}:
    case {'russian': 'FIXME reag'}:
        print({
            'english': 'The mention of business brings the senile man to his senses ',
            'russian': 'FIXME The mention of business brings the senile man to his senses '
        })
        print({
            'english': 'momentarily.',
            'russian': 'FIXME momentarily.'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_3940

    case {'english': lear'}:
    case {'russian': 'FIXME lear'}:
    case {'english': spel'}:
    case {'russian': 'FIXME spel'}:
        print({
            'english': 'The mention of business brings the senile man to his senses ',
            'russian': 'FIXME The mention of business brings the senile man to his senses '
        })
        print({
            'english': 'momentarily.',
            'russian': 'FIXME momentarily.'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_2840

    case {'english': book'}:
    case {'russian': 'FIXME book'}:
    case {'english': magi'}:
    case {'russian': 'FIXME magi'}:
    case {'english': sell'}:
    case {'russian': 'FIXME sell'}:
        print({
            'english': 'The mention of business brings the senile man to his senses ',
            'russian': 'FIXME The mention of business brings the senile man to his senses '
        })
        print({
            'english': 'momentarily.',
            'russian': 'FIXME momentarily.'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_4713

    case {'english': name'}:
    case {'russian': 'FIXME name'}:
        print({
            'english': '"Names I\'m always thinking,',
            'russian': 'FIXME "Names I\'m always thinking,'
        })
        wait()

        print({
            'english': '\nNames I always see.',
            'russian': 'FIXME \nNames I always see.'
        })
        wait()

        print({
            'english': '\nHave you any inkling',
            'russian': 'FIXME \nHave you any inkling'
        })
        wait()

        print({
            'english': '\nWhat they seem to mean?"',
            'russian': 'FIXME \nWhat they seem to mean?"'
        })
        jump label_280

    case {'english': job'}:
    case {'russian': 'FIXME job'}:
        print({
            'english': '"I have nice @reagents,',
            'russian': 'FIXME "I have nice @reagents,'
        })
        wait()

        print({
            'english': '\nAlso wondrous @spells.',
            'russian': 'FIXME \nAlso wondrous @spells.'
        })
        wait()

        print({
            'english': '\nIf you need a magic @book,',
            'russian': 'FIXME \nIf you need a magic @book,'
        })
        wait()

        print({
            'english': '\nThose I also sell."',
            'russian': 'FIXME \nThose I also sell."'
        })
        jump label_280

    case {'english': hora'}:
    case {'russian': 'FIXME hora'}:
    case {'english': tubl'}:
    case {'russian': 'FIXME tubl'}:
        print({
            'english': '"That is too familiar,',
            'russian': 'FIXME "That is too familiar,'
        })
        wait()

        print({
            'english': '\nCould it be a friend?',
            'russian': 'FIXME \nCould it be a friend?'
        })
        wait()

        print({
            'english': '\nNo, none is delivered,',
            'russian': 'FIXME \nNo, none is delivered,'
        })
        wait()

        print({
            'english': '\nSo I must pretend."',
            'russian': 'FIXME \nSo I must pretend."'
        })
        setBit(byte 235, value 0)
        jump label_280

    case {'english': kill'}:
    case {'russian': 'FIXME kill'}:
    case {'english': murd'}:
    case {'russian': 'FIXME murd'}:
        print({
            'english': '"\'Step into my parlor,\'',
            'russian': 'FIXME "\'Step into my parlor,\''
        })
        wait()

        print({
            'english': '\nSaid the spider to the fly.',
            'russian': 'FIXME \nSaid the spider to the fly.'
        })
        wait()

        print({
            'english': '\nPerhaps if he could holler,',
            'russian': 'FIXME \nPerhaps if he could holler,'
        })
        wait()

        print({
            'english': '\nHe would not have to die."',
            'russian': 'FIXME \nHe would not have to die."'
        })
        jump label_280

    case {'english': relt'}:
    case {'russian': 'FIXME relt'}:
    case {'english': rent'}:
    case {'russian': 'FIXME rent'}:
        print({
            'english': '"Many are pretenders,',
            'russian': 'FIXME "Many are pretenders,'
        })
        wait()

        print({
            'english': '\nA harmless game they play.',
            'russian': 'FIXME \nA harmless game they play.'
        })
        wait()

        print({
            'english': '\nBut for the few offenders,',
            'russian': 'FIXME \nBut for the few offenders,'
        })
        wait()

        print({
            'english': '\nOf constant night they pray."',
            'russian': 'FIXME \nOf constant night they pray."'
        })
        jump label_280

    case {'english': ghos'}:
    case {'russian': 'FIXME ghos'}:
        print({
            'english': 'He purses his lips and lets out an eery, high-pitched cry.',
            'russian': 'FIXME He purses his lips and lets out an eery, high-pitched cry.'
        })
        wait()

        print({
            'english': '\n\n"That is my impression.',
            'russian': 'FIXME \n\n"That is my impression.'
        })
        wait()

        print({
            'english': '\nTell me what you think.',
            'russian': 'FIXME \nTell me what you think.'
        })
        wait()

        print({
            'english': '\nCan you learn a lesson,',
            'russian': 'FIXME \nCan you learn a lesson,'
        })
        wait()

        print({
            'english': '\nFrom what it has to teach?"',
            'russian': 'FIXME \nFrom what it has to teach?"'
        })
        jump label_280

    case {'english': burm'}:
    case {'russian': 'FIXME burm'}:
    case {'english': shav'}:
    case {'russian': 'FIXME shav'}:
        print({
            'english': '"Don\'t stick your arm',
            'russian': 'FIXME "Don\'t stick your arm'
        })
        wait()

        print({
            'english': '\nOut too far.',
            'russian': 'FIXME \nOut too far.'
        })
        wait()

        print({
            'english': '\nIt may go home',
            'russian': 'FIXME \nIt may go home'
        })
        wait()

        print({
            'english': '\nIn another car!"',
            'russian': 'FIXME \nIn another car!"'
        })
        wait()

        print({
            'english': '\n-- Burma Shave.',
            'russian': 'FIXME \n-- Burma Shave.'
        })
        jump label_280

    case {'english': quen'}:
    case {'russian': 'FIXME quen'}:
        print({
            'english': '"Ask about a traitor,',
            'russian': 'FIXME "Ask about a traitor,'
        })
        wait()

        print({
            'english': '\nAsk about a love,',
            'russian': 'FIXME \nAsk about a love,'
        })
        wait()

        print({
            'english': '\nAnd if you are creative,',
            'russian': 'FIXME \nAnd if you are creative,'
        })
        wait()

        print({
            'english': '\nAsk above the dove."',
            'russian': 'FIXME \nAsk above the dove."'
        })
        jump label_280

    case {'english': garg'}:
    case {'russian': 'FIXME garg'}:
        print({
            'english': '"What is truly fearsome,',
            'russian': 'FIXME "What is truly fearsome,'
        })
        wait()

        print({
            'english': '\nWhat can evil be?',
            'russian': 'FIXME \nWhat can evil be?'
        })
        wait()

        print({
            'english': '\nNot all that growls is gruesome,',
            'russian': 'FIXME \nNot all that growls is gruesome,'
        })
        wait()

        print({
            'english': '\nNot all that hates has wings."',
            'russian': 'FIXME \nNot all that hates has wings."'
        })
        jump label_280

    case {'english': gate'}:
    case {'russian': 'FIXME gate'}:
    case {'english': moon'}:
    case {'russian': 'FIXME moon'}:
    case {'english': shri'}:
    case {'russian': 'FIXME shri'}:
        print({
            'english': '"Through a glowing door,',
            'russian': 'FIXME "Through a glowing door,'
        })
        wait()

        print({
            'english': '\nBy the full moons\' light.',
            'russian': 'FIXME \nBy the full moons\' light.'
        })
        wait()

        print({
            'english': '\nFor me to tell you more',
            'russian': 'FIXME \nFor me to tell you more'
        })
        wait()

        print({
            'english': '\nWould take us half the night!"',
            'russian': 'FIXME \nWould take us half the night!"'
        })
        jump label_280

    case {'english': bell'}:
    case {'russian': 'FIXME bell'}:
    case {'english': tren'}:
    case {'russian': 'FIXME tren'}:
        print({
            'english': '"He who has opinions,',
            'russian': 'FIXME "He who has opinions,'
        })
        wait()

        print({
            'english': '\nThinks he knows it all,',
            'russian': 'FIXME \nThinks he knows it all,'
        })
        wait()

        print({
            'english': '\nWill someday end up learning',
            'russian': 'FIXME \nWill someday end up learning'
        })
        wait()

        print({
            'english': '\nWhat comes before a fall."',
            'russian': 'FIXME \nWhat comes before a fall."'
        })
        jump label_280

    case {'english': yorl'}:
    case {'russian': 'FIXME yorl'}:
        print({
            'english': '"Simple has its moment',
            'russian': 'FIXME "Simple has its moment'
        })
        wait()

        print({
            'english': '\nAnd often is received',
            'russian': 'FIXME \nAnd often is received'
        })
        wait()

        print({
            'english': '\nMuch better than the brilliant,',
            'russian': 'FIXME \nMuch better than the brilliant,'
        })
        wait()

        print({
            'english': '\nWho often will deceive."',
            'russian': 'FIXME \nWho often will deceive."'
        })
        jump label_280

    case {'english': mich'}:
    case {'russian': 'FIXME mich'}:
        print({
            'english': '"Pain can run so deeply',
            'russian': 'FIXME "Pain can run so deeply'
        })
        wait()

        print({
            'english': '\nThat one becomes a mute,',
            'russian': 'FIXME \nThat one becomes a mute,'
        })
        wait()

        print({
            'english': '\nIn fear of leading others',
            'russian': 'FIXME \nIn fear of leading others'
        })
        wait()

        print({
            'english': '\nWhere goodness is in dispute."',
            'russian': 'FIXME \nWhere goodness is in dispute."'
        })
        jump label_280

    case {'english': gide'}:
    case {'russian': 'FIXME gide'}:
        print({
            'english': '"Kindness is a proverb',
            'russian': 'FIXME "Kindness is a proverb'
        })
        wait()

        print({
            'english': '\nThat all can understand,',
            'russian': 'FIXME \nThat all can understand,'
        })
        wait()

        print({
            'english': '\nAnd those who share it with you',
            'russian': 'FIXME \nAnd those who share it with you'
        })
        wait()

        print({
            'english': '\nWill oft be in demand."',
            'russian': 'FIXME \nWill oft be in demand."'
        })
        jump label_280

    case {'english': stiv'}:
    case {'russian': 'FIXME stiv'}:
        print({
            'english': '"Little is the difference,',
            'russian': 'FIXME "Little is the difference,'
        })
        wait()

        print({
            'english': '\nThat seperates ourselves.',
            'russian': 'FIXME \nThat seperates ourselves.'
        })
        wait()

        print({
            'english': '\nRemembering this inference,',
            'russian': 'FIXME \nRemembering this inference,'
        })
        wait()

        print({
            'english': '\nIs oft a great challenge."',
            'russian': 'FIXME \nIs oft a great challenge."'
        })
        jump label_280

    case {'english': marn'}:
    case {'russian': 'FIXME marn'}:
        print({
            'english': '"Love has many rivers,',
            'russian': 'FIXME "Love has many rivers,'
        })
        wait()

        print({
            'english': '\nYet grief can twist them all.',
            'russian': 'FIXME \nYet grief can twist them all.'
        })
        wait()

        print({
            'english': '\nBe guided by your wisdom,',
            'russian': 'FIXME \nBe guided by your wisdom,'
        })
        wait()

        print({
            'english': '\nAnd you\'ll achieve the goal."',
            'russian': 'FIXME \nAnd you\'ll achieve the goal."'
        })
        jump label_280

    case {'english': brit'}:
    case {'russian': 'FIXME brit'}:
    case {'english': lord'}:
    case {'russian': 'FIXME lord'}:
        print({
            'english': '"A council has a purpose,',
            'russian': 'FIXME "A council has a purpose,'
        })
        wait()

        print({
            'english': '\nAnd yet it can be wrong.',
            'russian': 'FIXME \nAnd yet it can be wrong.'
        })
        wait()

        print({
            'english': '\nThere are no notes that singly',
            'russian': 'FIXME \nThere are no notes that singly'
        })
        wait()

        print({
            'english': '\nPut the melody in a song."',
            'russian': 'FIXME \nPut the melody in a song."'
        })
        jump label_280

    case {'english': bye'}:
    case {'russian': 'FIXME bye'}:
        print({
            'english': '"I see that they are going,',
            'russian': 'FIXME "I see that they are going,'
        })
        wait()

        print({
            'english': '\nI\'m sure they will return.',
            'russian': 'FIXME \nI\'m sure they will return.'
        })
        wait()

        print({
            'english': '\nFor if they lack the knowing,',
            'russian': 'FIXME \nFor if they lack the knowing,'
        })
        wait()

        print({
            'english': '\nThey\'ll always need to learn."\n',
            'russian': 'FIXME \nThey\'ll always need to learn."\n'
        })
        bye()

    case '*':
        print({
            'english': '"I hear you have a question.',
            'russian': 'FIXME "I hear you have a question.'
        })
        wait()

        print({
            'english': '\nI\'m here to answer some.',
            'russian': 'FIXME \nI\'m here to answer some.'
        })
        wait()

        print({
            'english': '\nIf I may make suggestions,',
            'russian': 'FIXME \nIf I may make suggestions,'
        })
        wait()

        print({
            'english': '\nPlease ask another one."',
            'russian': 'FIXME \nPlease ask another one."'
        })
        jump label_280
    esac

label_2840:
    if greater(integer(value 23), byte 0):
        integer(value 1) = byte 0
        integer(value 2) = byte 0
        integer(value 4) = byte 0
        jump label_2938
    fi

    integer(value 3) = character(byte 0, byte 0)

    if hasObject(integer(value 3), byte 57, byte 0):
        jump label_3236

    else:
        print({
            'english': '"But thou hast not a spell@book!"',
            'russian': 'FIXME "But thou hast not a spell@book!"'
        })
        jump label_280
    fi

label_2938:
    if greater(integer(value 1), integer(value 23)):
        jump label_3052
    fi

    integer(value 3) = character(integer(value 1), byte 0)

    if equals(hasObject(integer(value 3), byte 57, byte 0), byte 0):
        jump label_3037
    fi

    if equals(integer(value 4), byte 0):
        integer(value 4) = integer(value 3)
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_3037
    fi

    look(integer(value 4))
    print({
        'english': '#2) $Y\n',
        'russian': 'FIXME #2) $Y\n'
    })
    integer(value 2) = plus(integer(value 2), byte 1)
    integer(value 4) = integer(value 3)

label_3037:
    integer(value 1) = plus(integer(value 1), byte 1)
    jump label_2938

label_3052:
    if equals(integer(value 2), byte 0):
        print({
            'english': '"But none of you has a spell@book!"',
            'russian': 'FIXME "But none of you has a spell@book!"'
        })
        jump label_280
    fi

    if equals(integer(value 2), byte 1):
        integer(value 3) = integer(value 4)
        jump label_3236
    fi

    look(integer(value 4))
    print({
        'english': '#2) $Y\n"Which of you?" ',
        'russian': 'FIXME #2) $Y\n"Which of you?" '
    })
    inputInteger(integer(value 2))

    if equals(integer(value 2), byte 0):
        jump label_281
    fi

    integer(value 1) = byte 0

label_3170:
    integer(value 3) = character(integer(value 1), byte 0)

    if hasObject(integer(value 3), byte 57, byte 0):
        integer(value 2) = minus(integer(value 2), byte 1)
    fi

    if equals(integer(value 2), byte 0):
        jump label_3236
    fi

    integer(value 1) = plus(integer(value 1), byte 1)

    if lessOrEquals(integer(value 1), integer(value 23)):
        jump label_3170
    fi

label_3236:
    look(integer(value 3))
    integer(value 1) = level(integer(value 3), byte 0)
    string(value 1) = data(strings_5226, integer(value 1))
    print({
        'english': '"In which Circle does $Y wish to study?" ',
        'russian': 'FIXME "In which Circle does $Y wish to study?" '
    })
    inputInteger(integer(value 0))

    if equals(integer(value 0), byte 0):
        jump label_280
    fi

    if greater(integer(value 0), byte 8):
        print({
            'english': '"As everybody knows, there are only eight circles."',
            'russian': 'FIXME "As everybody knows, there are only eight circles."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_3236
    fi

    if greater(integer(value 0), integer(value 1)):
        print({
            'english': '"I sense that $Y is only ready for the #1$1 Circle."',
            'russian': 'FIXME "I sense that $Y is only ready for the #1$1 Circle."'
        })
        wait()

        print({
            'english': '\n\n"But such matters are not my concern..."',
            'russian': 'FIXME \n\n"But such matters are not my concern..."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
    fi

    integer(value 0) = minus(integer(value 0), byte 1)
    integer(value 0) = multiply(integer(value 0), byte 10)

    if equals(data(integers_5253, integer(value 0)), byte 0):
        print({
            'english': '"I have no spells of that circle."',
            'russian': 'FIXME "I have no spells of that circle."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_3236
    fi

    integer(value 2) = byte 1

label_3576:
    string(value 0) = data(strings_5413, minus(plus(integer(value 0), integer(value 2)), byte 1))
    print({
        'english': '#2) $0\n',
        'russian': 'FIXME #2) $0\n'
    })
    integer(value 2) = plus(integer(value 2), byte 1)

    if greater(data(integers_5253, minus(plus(integer(value 0), integer(value 2)), byte 1)), byte 0):
        jump label_3576
    fi

    print({
        'english': '"Which of these?" ',
        'russian': 'FIXME "Which of these?" '
    })
    inputInteger(integer(value 4))

    if or(equals(integer(value 4), byte 0), greaterOrEquals(integer(value 4), integer(value 2))):
        print({
            'english': '"Perhaps $Y is not ready for this circle."',
            'russian': 'FIXME "Perhaps $Y is not ready for this circle."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_3236
    fi

    integer(value 4) = minus(integer(value 4), byte 1)
    integer(value 5) = plus(byte 30, multiply(integer(value 0), byte 3))

    if less(objectsCount(integer(value 3), byte 88), integer(value 5)):
        print({
            'english': '"$Y lacks the #5 gold required."',
            'russian': 'FIXME "$Y lacks the #5 gold required."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_3236
    fi

    print({
        'english': '"That spell costs #5 gold. Interested?" ',
        'russian': 'FIXME "That spell costs #5 gold. Interested?" '
    })

    choice({
        'english': 'yn',
        'russian': 'FIXME yn'
    })

    case {'english': y'}:
    case {'russian': 'FIXME y'}:
        print({
            'english': '$N hands $Y a piece of rune-covered parchment.',
            'russian': 'FIXME $N hands $Y a piece of rune-covered parchment.'
        })
        destroyItem(integer(value 3), byte 88, byte 0, integer(value 5))
        createItem(integer(value 3), byte 58, data(integers_5253, plus(integer(value 0), integer(value 4))), byte 1)
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_3236

    case {'english': n'}:
    case {'russian': 'FIXME n'}:
        jump label_3236
    esac

label_3940:
    if greater(integer(value 23), byte 0):
        integer(value 1) = byte 0
        integer(value 2) = byte 1
        integer(value 4) = byte 0
        jump label_3989
    fi

    integer(value 3) = character(byte 0, byte 0)
    jump label_4091

label_3989:
    integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    look(integer(value 3))
    print({
        'english': '#2) $Y\n',
        'russian': 'FIXME #2) $Y\n'
    })

    if lessOrEquals(integer(value 2), integer(value 23)):
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_3989
    fi

    print({
        'english': '"Which of you?" ',
        'russian': 'FIXME "Which of you?" '
    })
    inputInteger(integer(value 2))

    if or(equals(integer(value 2), byte 0), greater(integer(value 2), plus(integer(value 23), byte 1))):
        jump label_281

    else:
        integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    fi

label_4091:
    look(integer(value 3))
    integer(value 1) = byte 1

label_4102:
    string(value 1) = data(strings_5148, minus(integer(value 1), byte 1))
    print({
        'english': '#1) $1\n',
        'russian': 'FIXME #1) $1\n'
    })
    integer(value 1) = plus(integer(value 1), byte 1)

    if greater(data(integers_5116, minus(integer(value 1), byte 1)), byte 0):
        jump label_4102
    fi

    print({
        'english': '"Which of these?" ',
        'russian': 'FIXME "Which of these?" '
    })
    inputInteger(integer(value 2))

    if or(equals(integer(value 2), byte 0), greaterOrEquals(integer(value 2), integer(value 1))):
        jump label_281
    fi

    integer(value 2) = minus(integer(value 2), byte 1)
    integer(value 1) = data(integers_5132, integer(value 2))
    string(value 1) = data(strings_5148, integer(value 2))
    integer(value 5) = byte 0
    print({
        'english': '"$1 costs #1 per portion."',
        'russian': 'FIXME "$1 costs #1 per portion."'
    })
    wait()

    print({
        'english': '\n\n"How many dost thou want?" ',
        'russian': 'FIXME \n\n"How many dost thou want?" '
    })
    input(integer(value 4))

    if greater(integer(value 4), word 500):
        integer(value 4) = word 500
    fi

    if equals(integer(value 4), byte 0):
        jump label_4091
    fi

label_4329:
    if less(canCarry(integer(value 3)), weight(data(integers_5116, integer(value 2)), byte 1)):
        jump label_4451
    fi

    if less(objectsCount(integer(value 3), byte 88), integer(value 1)):
        jump label_4582
    fi

    destroyItem(integer(value 3), byte 88, byte 0, integer(value 1))
    createItem(integer(value 3), data(integers_5116, integer(value 2)), byte 0, byte 1)
    integer(value 5) = plus(integer(value 5), byte 1)

    if equals(integer(value 5), integer(value 4)):
        print({
            'english': '$N hands $Y the $1.',
            'russian': 'FIXME $N hands $Y the $1.'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_4091

    else:
        jump label_4329
    fi

label_4451:
    if integer(value 5):
        print({
            'english': '"Thou cannot carry that much!"',
            'russian': 'FIXME "Thou cannot carry that much!"'
        })
        wait()

        print({
            'english': '\n\n"I\'ll give thee #5; thou dost not need the rest."',
            'russian': 'FIXME \n\n"I\'ll give thee #5; thou dost not need the rest."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_4091

    else:
        print({
            'english': '"Thou cannot carry any $1!"',
            'russian': 'FIXME "Thou cannot carry any $1!"'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_4091
    fi

label_4582:
    if integer(value 5):
        print({
            'english': '"Thou cannot afford that much!"',
            'russian': 'FIXME "Thou cannot afford that much!"'
        })
        wait()

        print({
            'english': '\n\n"I\'ll give thee #5; thou cannot have the rest."',
            'russian': 'FIXME \n\n"I\'ll give thee #5; thou cannot have the rest."'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_4091

    else:
        print({
            'english': '"Thou cannot afford any $1!"',
            'russian': 'FIXME "Thou cannot afford any $1!"'
        })
        wait()

        print({
            'english': '\n\n',
            'russian': 'FIXME \n\n'
        })
        jump label_4091
    fi

label_4713:
    if greater(integer(value 23), byte 0):
        integer(value 1) = byte 0
        integer(value 2) = byte 1
        integer(value 4) = byte 0
        jump label_4762
    fi

    integer(value 3) = character(byte 0, byte 0)
    jump label_4864

label_4762:
    integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    look(integer(value 3))
    print({
        'english': '#2) $Y\n',
        'russian': 'FIXME #2) $Y\n'
    })

    if lessOrEquals(integer(value 2), integer(value 23)):
        integer(value 2) = plus(integer(value 2), byte 1)
        jump label_4762
    fi

    print({
        'english': '"Which of you?" ',
        'russian': 'FIXME "Which of you?" '
    })
    inputInteger(integer(value 2))

    if or(equals(integer(value 2), byte 0), greater(integer(value 2), plus(integer(value 23), byte 1))):
        jump label_280

    else:
        integer(value 3) = character(minus(integer(value 2), byte 1), byte 0)
    fi

label_4864:
    look(integer(value 3))

    if less(canCarry(integer(value 3)), weight(byte 57, byte 1)):
        print({
            'english': '"But thou cannot carry a spellbook!"',
            'russian': 'FIXME "But thou cannot carry a spellbook!"'
        })
        jump label_280
    fi

    if less(objectsCount(integer(value 3), byte 88), byte 50):
        print({
            'english': '"But thou cannot afford a spellbook!"',
            'russian': 'FIXME "But thou cannot afford a spellbook!"'
        })
        jump label_280
    fi

    print({
        'english': '"A spellbook costs 50 gold pieces. Interested?" ',
        'russian': 'FIXME "A spellbook costs 50 gold pieces. Interested?" '
    })

    choice({
        'english': 'yn',
        'russian': 'FIXME yn'
    })

    case {'english': y'}:
    case {'russian': 'FIXME y'}:
        destroyItem(integer(value 3), byte 88, byte 0, byte 50)
        createItem(integer(value 3), byte 57, byte 0, byte 1)
        jump label_280

    case {'english': n'}:
    case {'russian': 'FIXME n'}:
        if integer(value 23):
            print({
                'english': '"Perhaps one of thy friends then."',
                'russian': 'FIXME "Perhaps one of thy friends then."'
            })
            wait()

            print({
                'english': '\n\n',
                'russian': 'FIXME \n\n'
            })
            jump label_4713

        else:
            jump label_280
        fi
    esac

integers_5116 = [
    65, // 0
    66, // 1
    69, // 2
    70, // 3
    71, // 4
    72, // 5
    0,  // 6
    0,  // 7
]

integers_5132 = [
    3, // 0
    3, // 1
    5, // 2
    2, // 3
    1, // 4
    2, // 5
    0, // 6
    0, // 7
]

strings_5148 = [
    {
        'english': 'Black Pearl',
        'russian': 'FIXME Black Pearl'
    }, // 0
    {
        'english': 'Blood Moss',
        'russian': 'FIXME Blood Moss'
    }, // 1
    {
        'english': 'Mandrake Root',
        'russian': 'FIXME Mandrake Root'
    }, // 2
    {
        'english': 'Nightshade',
        'russian': 'FIXME Nightshade'
    }, // 3
    {
        'english': 'Spider Silk',
        'russian': 'FIXME Spider Silk'
    }, // 4
    {
        'english': 'Sulfurous Ash',
        'russian': 'FIXME Sulfurous Ash'
    }, // 5
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 6
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 7
]

strings_5226 = [
    {
        'english': 'th',
        'russian': 'FIXME th'
    }, // 0
    {
        'english': 'st',
        'russian': 'FIXME st'
    }, // 1
    {
        'english': 'nd',
        'russian': 'FIXME nd'
    }, // 2
    {
        'english': 'rd',
        'russian': 'FIXME rd'
    }, // 3
    {
        'english': 'th',
        'russian': 'FIXME th'
    }, // 4
    {
        'english': 'th',
        'russian': 'FIXME th'
    }, // 5
    {
        'english': 'th',
        'russian': 'FIXME th'
    }, // 6
    {
        'english': 'th',
        'russian': 'FIXME th'
    }, // 7
    {
        'english': 'th',
        'russian': 'FIXME th'
    }, // 8
]

integers_5253 = [
    5,   // 0
    0,   // 1
    0,   // 2
    0,   // 3
    0,   // 4
    0,   // 5
    0,   // 6
    0,   // 7
    0,   // 8
    0,   // 9
    17,  // 10
    18,  // 11
    22,  // 12
    23,  // 13
    0,   // 14
    0,   // 15
    0,   // 16
    0,   // 17
    0,   // 18
    0,   // 19
    32,  // 20
    34,  // 21
    0,   // 22
    0,   // 23
    0,   // 24
    0,   // 25
    0,   // 26
    0,   // 27
    0,   // 28
    0,   // 29
    50,  // 30
    0,   // 31
    0,   // 32
    0,   // 33
    0,   // 34
    0,   // 35
    0,   // 36
    0,   // 37
    0,   // 38
    0,   // 39
    65,  // 40
    68,  // 41
    69,  // 42
    0,   // 43
    0,   // 44
    0,   // 45
    0,   // 46
    0,   // 47
    0,   // 48
    0,   // 49
    83,  // 50
    84,  // 51
    87,  // 52
    0,   // 53
    0,   // 54
    0,   // 55
    0,   // 56
    0,   // 57
    0,   // 58
    0,   // 59
    96,  // 60
    98,  // 61
    101, // 62
    102, // 63
    104, // 64
    0,   // 65
    0,   // 66
    0,   // 67
    0,   // 68
    0,   // 69
    0,   // 70
    0,   // 71
    0,   // 72
    0,   // 73
    0,   // 74
    0,   // 75
    0,   // 76
    0,   // 77
    0,   // 78
    0,   // 79
]

strings_5413 = [
    {
        'english': 'Harm',
        'russian': 'FIXME Harm'
    }, // 0
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 1
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 2
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 3
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 4
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 5
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 6
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 7
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 8
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 9
    {
        'english': 'Magic Arrow',
        'russian': 'FIXME Magic Arrow'
    }, // 10
    {
        'english': 'Poison',
        'russian': 'FIXME Poison'
    }, // 11
    {
        'english': 'Trap',
        'russian': 'FIXME Trap'
    }, // 12
    {
        'english': 'Unlock Magic',
        'russian': 'FIXME Unlock Magic'
    }, // 13
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 14
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 15
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 16
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 17
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 18
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 19
    {
        'english': 'Curse',
        'russian': 'FIXME Curse'
    }, // 20
    {
        'english': 'Fireball',
        'russian': 'FIXME Fireball'
    }, // 21
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 22
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 23
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 24
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 25
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 26
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 27
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 28
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 29
    {
        'english': 'Disable',
        'russian': 'FIXME Disable'
    }, // 30
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 31
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 32
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 33
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 34
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 35
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 36
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 37
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 38
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 39
    {
        'english': 'Explosion',
        'russian': 'FIXME Explosion'
    }, // 40
    {
        'english': 'Lightning',
        'russian': 'FIXME Lightning'
    }, // 41
    {
        'english': 'Paralyze',
        'russian': 'FIXME Paralyze'
    }, // 42
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 43
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 44
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 45
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 46
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 47
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 48
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 49
    {
        'english': 'Flame Wind',
        'russian': 'FIXME Flame Wind'
    }, // 50
    {
        'english': 'Hail Storm',
        'russian': 'FIXME Hail Storm'
    }, // 51
    {
        'english': 'Poison Wind',
        'russian': 'FIXME Poison Wind'
    }, // 52
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 53
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 54
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 55
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 56
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 57
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 58
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 59
    {
        'english': 'Chain Bolt',
        'russian': 'FIXME Chain Bolt'
    }, // 60
    {
        'english': 'Energy Wind',
        'russian': 'FIXME Energy Wind'
    }, // 61
    {
        'english': 'Kill',
        'russian': 'FIXME Kill'
    }, // 62
    {
        'english': 'Mass Curse',
        'russian': 'FIXME Mass Curse'
    }, // 63
    {
        'english': 'Wing Strike',
        'russian': 'FIXME Wing Strike'
    }, // 64
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 65
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 66
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 67
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 68
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 69
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 70
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 71
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 72
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 73
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 74
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 75
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 76
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 77
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 78
    {
        'english': ' ',
        'russian': 'FIXME  '
    }, // 79
]
