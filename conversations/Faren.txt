source('CONVERSE.B')
index(50)

id(149)
name({
    'english': 'Faren',
    'russian': 'Фарен'
})

description:
    print({
        'english': 'a good looking young man with a wine glass in his hand.',
        'russian': 'симпатичного молодого человека с бокалом вина в руке.'
    })
    wait()

    print({
        'english': '\n',
        'russian': '\n'
    })

interaction:
    integer(value 5) = byte 0

    if hasBit(byte 235, value 0):
        jump label_142
    fi

    print({
        'english': '"Hello," he says, extending a delicate hand.',
        'russian': '"Привет", - говорит он, протягивая изящную руку.'
    })
    setBit(byte 235, value 0)
    wait()

    print({
        'english': '\n',
        'russian': '\n'
    })
    jump label_211

label_142:
    print({
        'english': '"I have seen your face before," he says, cocking his head sideways.',
        'russian': '"Я уже видел ваше лицо", - говорит он, склонив голову набок.'
    })
    wait()

    print({
        'english': '\n',
        'russian': '\n'
    })

label_211:
    print({
        'english': '\n"What is it you need?"\n',
        'russian': '\n"Что вам нужно?"\n'
    })

label_235:
    ask()

    case 'name':
    case {'russian': 'имя'}:
        print({
            'english': '"@Faren."',
            'russian': '"@Фарен".'
        })
        wait()

        print({
            'english': '\n\n"@Faren the @drunk as some call me." He winks at you.\n',
            'russian': '\n\n"@Фарен-@пьяница, как некоторые называют меня". Он подмигивает вам.\n'
        })
        jump label_235

    case 'drun':
    case {'russian': 'пьян'}:
        print({
            'english': '"Just kidding." He smiles broadly.',
            'russian': '"Шучу". Он широко улыбается.'
        })
        wait()

        print({
            'english': '\n',
            'russian': '\n'
        })
        jump label_211

    case 'fare':
    case {'russian': 'фаре'}:
        print({
            'english': '"You might have noticed the similarity between my @sister and me."\n',
            'russian': '"Вы, наверное, заметили сходство между мной и моей @сестрой".\n'
        })
        jump label_235

    case 'sist':
    case {'russian': 'сест'}:
        print({
            'english': '"A beautiful lass @Stephanie is."\n',
            'russian': '"@Стефани - прекрасная девушка".\n'
        })
        jump label_235

    case 'step':
    case {'russian': 'стеф'}:
        print({
            'english': '"Have you met her? Then you know she is @blind."\n',
            'russian': '"Вы её встречали? Тогда вы знаете, что она @слепая".\n'
        })
        jump label_235

    case 'blin':
    case {'russian': 'слеп'}:
        print({
            'english': '"Yes, has been so since birth."',
            'russian': '"Да, так было с самого рождения".'
        })
        wait()

        print({
            'english': '\n\n"For her it is like being born a @gargoyle."\n',
            'russian': '\n\n"Для неё это всё равно, что родиться @горгульей".\n'
        })
        jump label_235

    case 'garg':
    case {'russian': 'горг'}:
        print({
            'english': '"She knows no other life. It is her lot to make the best of her ',
            'russian': '"Она не знает другой жизни. Ей суждено извлечь максимум пользы из своего '
        })
        print({
            'english': 'situation."',
            'russian': 'положения".'
        })
        wait()

        print({
            'english': '\n\n"In this she is no different than you or I." He pauses to gather his',
            'russian': '\n\n"В этом она ничем не отличается от нас с вами". - Он делает паузу, чтобы собраться с'
        })
        print({
            'english': ' thoughts.',
            'russian': ' мыслями.'
        })
        wait()

        print({
            'english': '\n\n"Even gargoyles face this dilemma, I\'ll wager."',
            'russian': '\n\n"Держу пари, даже горгульи сталкиваются с этой дилеммой".'
        })
        wait()

        print({
            'english': '\n\n"But we know them more by the ways they differ from us, rather than ',
            'russian': '\n\n"Но мы больше узнаем их по тому, чем они отличаются от нас, а не по '
        })
        print({
            'english': 'their similarities."\n',
            'russian': 'тому, чем они на нас похожи".\n'
        })
        jump label_235

    case 'buy':
    case {'russian': 'купи'}:
    case 'wine':
    case {'russian': 'вино'}:
        jump label_1132

    case 'job':
    case {'russian': 'раб'}:
        print({
            'english': '"I sell many types of @wine, made right here." He clicks his tongue.\n',
            'russian': '"Я продаю много сортов @вина, изготовленного прямо здесь". Он прищёлкивает языком.\n'
        })
        jump label_235

    case 'bye':
    case {'russian': 'пока'}:
        print({
            'english': '"Have a nice $T." He sips his wineglass.\n',
            'russian': '"Приятного $T". Он отпивает вино из своего бокала.\n'
        })
        bye()

    case '*':
        print({
            'english': 'He scratches his head and looks around.\n',
            'russian': 'Он чешет в затылке и оглядывается по сторонам.\n'
        })
    esac

    jump label_235

label_1132:
    if equals(integer(value 23), byte 0):
        integer(value 3) = character(byte 0, byte 0)
        jump label_1281
    fi

label_1155:
    integer(value 0) = byte 0
    integer(value 2) = byte 1

label_1169:
    look(character(integer(value 0), byte 0))
    print({
        'english': '#2. $Y\n',
        'russian': '#2. $Y\n'
    })
    integer(value 0) = plus(integer(value 0), byte 1)
    integer(value 2) = plus(integer(value 2), byte 1)

    if lessOrEquals(integer(value 0), integer(value 23)):
        jump label_1169
    fi

    print({
        'english': '"Which of you?" ',
        'russian': '"Кто из вас?" '
    })
    inputDigit(integer(value 3))

    if equals(integer(value 3), byte 0):
        jump label_1778
    fi

    integer(value 3) = minus(integer(value 3), byte 1)

    if greater(integer(value 3), integer(value 23)):
        jump label_1155
    fi

    integer(value 3) = character(integer(value 3), byte 0)

label_1281:
    look(integer(value 3))
    integer(value 0) = byte 1

label_1292:
    string(value 0) = data(strings_1870, minus(integer(value 0), byte 1))
    print({
        'english': '#0. $0\n',
        'russian': '#0. $0\n'
    })
    integer(value 0) = plus(integer(value 0), byte 1)

    if less(integer(value 0), byte 7):
        jump label_1292
    fi

    print({
        'english': '"Which item?" ',
        'russian': '"Какое вино?" '
    })
    inputDigit(integer(value 0))

    if equals(integer(value 0), byte 0):
        jump label_1778
    fi

    if greater(integer(value 0), byte 6):
        jump label_1281
    fi

    integer(value 0) = minus(integer(value 0), byte 1)
    string(value 0) = data(strings_1870, integer(value 0))
    integer(value 1) = data(integers_1846, integer(value 0))
    print({
        'english': '$N smiles at $Y. "For $0 it will cost you #1 gold. Interested?" ',
        'russian': '$N улыбается $Y. "Для $0 это будет стоить #1 золотом. Интересует?" '
    })

    choice({
        'english': 'yn',
        'russian': 'дн'
    })

    case 'n':
    case {'russian': 'н'}:
        jump label_1281

    case 'y':
    case {'russian': 'д'}:
    esac

    print({
        'english': '\n',
        'russian': '\n'
    })

    if less(plus(canCarry(integer(value 3)), weight(byte 88, integer(value 1))), weight(data(integers_1858, integer(value 0)), byte 1)):
        look(integer(value 3))
        print({
            'english': '$N glances at $Y, "You look pretty full to me."',
            'russian': '$N бросает взгляд на $Y, "Вы кажетесь мне довольно перегруженным".'
        })
        wait()

        print({
            'english': '\n',
            'russian': '\n'
        })
        jump label_211
    fi

    if greaterOrEquals(objectsCount(integer(value 3), byte 88), data(integers_1846, integer(value 0))):
        destroyItem(integer(value 3), byte 88, byte 0, data(integers_1846, integer(value 0)))
        createItem(integer(value 3), data(integers_1858, integer(value 0)), byte 0, byte 1)
        print({
            'english': '"Excellent!" After accepting $Y\'s gold, $N hands over the wine.',
            'russian': '"Отлично!" Приняв золото от $Y, $N передаёт вино.'
        })
        wait()

        print({
            'english': '\n',
            'russian': '\n'
        })
        integer(value 5) = byte 1
        string(value 1) = data(strings_1870, integer(value 0))
        print({
            'english': '\n',
            'russian': '\n'
        })
        jump label_1281

    else:
        print({
            'english': '$N looks at $Y. "You don\'t have enough gold."',
            'russian': '$N смотрит на $Y. "У вас недостаточно золота".'
        })
        wait()

        print({
            'english': '\n',
            'russian': '\n'
        })
        jump label_211
    fi

label_1778:
    if integer(value 5):
        print({
            'english': '"Enjoy your $1."',
            'russian': '"Наслаждайтесь, это отличное $1".'
        })
        wait()

        print({
            'english': '\n',
            'russian': '\n'
        })
        jump label_211
    fi

    print({
        'english': '"Too bad, it\'s really good wine."',
        'russian': '"Жаль, это действительно хорошее вино".'
    })
    wait()

    print({
        'english': '\n',
        'russian': '\n'
    })
    jump label_211

integers_1846 = [
    10,  // 0
    20,  // 1
    30,  // 2
    40,  // 3
    100, // 4
    100, // 5
]

integers_1858 = [
    115, // 0
    115, // 1
    115, // 2
    115, // 3
    115, // 4
    115, // 5
]

strings_1870 = [
    {
        'english': 'White Wine',
        'russian': 'Белое Вино'
    }, // 0
    {
        'english': 'Red Wine',
        'russian': 'Красное Вино'
    }, // 1
    {
        'english': 'Dry Wine',
        'russian': 'Сухое Вино'
    }, // 2
    {
        'english': 'Sweet Wine',
        'russian': 'Сладкое Вино'
    }, // 3
    {
        'english': 'Abbey Red',
        'russian': 'Аббатское Красное'
    }, // 4
    {
        'english': 'Abbey Dry',
        'russian': 'Аббатское Сухое'
    }, // 5
]
