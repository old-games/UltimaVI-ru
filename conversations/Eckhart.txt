source('CONVERSE.B')
index(52)

id(151)
name({
    'english': 'Eckhart',
    'russian': 'FIXME Eckhart'
})

description:
    print({
        'english': 'a gnarled man with knobby muscles.\n',
        'russian': 'FIXME a gnarled man with knobby muscles.\n'
    })

interaction:
    print({
        'english': '"Hullo, $G." He touches his cap respectfully.',
        'russian': 'FIXME "Hullo, $G." He touches his cap respectfully.'
    })

    if notEquals(integer(value 32), byte 144):
        jump label_252
    fi

    wait()

    print({
        'english': '\nHe has a very sharp knife with which he prunes off less productive ',
        'russian': 'FIXME \nHe has a very sharp knife with which he prunes off less productive '
    })
    print({
        'english': 'branches.\n*\n"Mind that you stay out of the flight paths of the @bees, ',
        'russian': 'FIXME branches.\n*\n"Mind that you stay out of the flight paths of the @bees, '
    })
    print({
        'english': '$G."',
        'russian': 'FIXME $G."'
    })
    jump label_252

label_252:
    print({
        'english': '\n',
        'russian': 'FIXME \n'
    })

    ask()

    case {'english': name'}:
    case {'russian': 'FIXME name'}:
        print({
            'english': '"Eckhart the vinekeeper, at your service, ',
            'russian': 'FIXME "Eckhart the vinekeeper, at your service, '
        })

        if equals(integer(value 16), byte 1):
            print({
                'english': 'ma\'am."',
                'russian': 'FIXME ma\'am."'
            })

        else:
            print({
                'english': 'sir."',
                'russian': 'FIXME sir."'
            })
        fi

        setBit(byte 235, value 0)
        jump label_252

    case {'english': bees'}:
    case {'russian': 'FIXME bees'}:
    case {'english': hone'}:
    case {'russian': 'FIXME hone'}:
    case {'english': mead'}:
    case {'russian': 'FIXME mead'}:
        print({
            'english': 'You notice the bees have regular aerial routes all about the vineyard.',
            'russian': 'FIXME You notice the bees have regular aerial routes all about the vineyard.'
        })
        wait()

        print({
            'english': '\n\n"Zeke keeps bees on the other side of the abbey, $G."',
            'russian': 'FIXME \n\n"Zeke keeps bees on the other side of the abbey, $G."'
        })
        jump label_252

    case {'english': job'}:
    case {'russian': 'FIXME job'}:
        print({
            'english': '"I care for the @garden and tend the @vines."',
            'russian': 'FIXME "I care for the @garden and tend the @vines."'
        })
        jump label_252

    case {'english': care'}:
    case {'russian': 'FIXME care'}:
    case {'english': gard'}:
    case {'russian': 'FIXME gard'}:
        print({
            'english': '"Some of our rosebushes were planted by druids hundreds of years ago."',
            'russian': 'FIXME "Some of our rosebushes were planted by druids hundreds of years ago."'
        })
        wait()

        print({
            'english': '\n\n"Eventually, we became the Brotherhood of the Rose."',
            'russian': 'FIXME \n\n"Eventually, we became the Brotherhood of the Rose."'
        })
        jump label_252

    case {'english': tend'}:
    case {'russian': 'FIXME tend'}:
    case {'english': vine'}:
    case {'russian': 'FIXME vine'}:
        if equals(integer(value 32), byte 144):
            print({
                'english': '"These rows," he gestures, "are ',
                'russian': 'FIXME "These rows," he gestures, "are '
            })

        else:
            print({
                'english': '"Here at the abbey we grow ',
                'russian': 'FIXME "Here at the abbey we grow '
            })
        fi

        print({
            'english': '@seedless grapes."',
            'russian': 'FIXME @seedless grapes."'
        })
        jump label_252

    case {'english': less'}:
    case {'russian': 'FIXME less'}:
    case {'english': seed'}:
    case {'russian': 'FIXME seed'}:
        print({
            'english': '"Amazing, ain\'t it, $G. The @enchanter made them for us."',
            'russian': 'FIXME "Amazing, ain\'t it, $G. The @enchanter made them for us."'
        })
        wait()

        print({
            'english': '\n\n"Now I grow new vines by grafting seedless @grapevines onto regular ',
            'russian': 'FIXME \n\n"Now I grow new vines by grafting seedless @grapevines onto regular '
        })
        print({
            'english': 'rootstocks."',
            'russian': 'FIXME rootstocks."'
        })
        jump label_252

    case {'english': ench'}:
    case {'russian': 'FIXME ench'}:
    case {'english': nico'}:
    case {'russian': 'FIXME nico'}:
        print({
            'english': '"Yes, $G. He lives east of here, between two rivers."',
            'russian': 'FIXME "Yes, $G. He lives east of here, between two rivers."'
        })
        wait()

        print({
            'english': '\n\n"His hut be due north of Britain, or so they tell me."',
            'russian': 'FIXME \n\n"His hut be due north of Britain, or so they tell me."'
        })
        jump label_252

    case {'english': grap'}:
    case {'russian': 'FIXME grap'}:
        if notEquals(integer(value 32), byte 144):
            print({
                'english': '"Visit me in the fields some time and I\'ll give you some!"',
                'russian': 'FIXME "Visit me in the fields some time and I\'ll give you some!"'
            })
            jump label_252
        fi

        print({
            'english': '"Now those grapes there are for making @wine."',
            'russian': 'FIXME "Now those grapes there are for making @wine."'
        })

        if partyHas(byte 2):
            wait()

            portrait(byte 2)
            print({
                'english': '\n\nDupre says "I cannot say which I like better: wine from grapes or ',
                'russian': 'FIXME \n\nDupre says "I cannot say which I like better: wine from grapes or '
            })
            print({
                'english': 'mead from honey!"',
                'russian': 'FIXME mead from honey!"'
            })
            portrait(byte 235)
        fi

        wait()

        print({
            'english': '\n\n"And these over here are for eating."',
            'russian': 'FIXME \n\n"And these over here are for eating."'
        })

        if and(notEquals(partyHasObject(byte 95, byte 0), word 32769), equals(hasBit(byte 235, byte 7), byte 1)):
            jump label_252
        fi

        if less(canCarry(byte 1), weight(byte 95, byte 1)):
            jump label_252
        fi

        setBit(byte 235, byte 7)
        createItem(byte 1, byte 95, byte 0, byte 1)
        wait()

        print({
            'english': '\n\nHe gives you a plump little bunch of sweet table grapes.',
            'russian': 'FIXME \n\nHe gives you a plump little bunch of sweet table grapes.'
        })
        jump label_252

    case {'english': wine'}:
    case {'russian': 'FIXME wine'}:
        print({
            'english': '"Ask @Faren of that."',
            'russian': 'FIXME "Ask @Faren of that."'
        })
        jump label_252

    case {'english': fare'}:
    case {'russian': 'FIXME fare'}:
        print({
            'english': '"Yes, Faren--the local winemaker."',
            'russian': 'FIXME "Yes, Faren--the local winemaker."'
        })
        jump label_252

    case {'english': bye'}:
    case {'russian': 'FIXME bye'}:
        if equals(integer(value 32), byte 144):
            print({
                'english': 'He waves and turns back to work.\n',
                'russian': 'FIXME He waves and turns back to work.\n'
            })

        else:
            print({
                'english': 'Eckhart waves goodbye.\n',
                'russian': 'FIXME Eckhart waves goodbye.\n'
            })
        fi

        bye()

    case '*':
        print({
            'english': '"Beg pardon, $G?"',
            'russian': 'FIXME "Beg pardon, $G?"'
        })
        jump label_252
