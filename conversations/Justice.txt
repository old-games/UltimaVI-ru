source('CONVERSE.B')
index(96)

id(195)
name('Justice')

description:
    print('the altar of Justice.')

    f3()

interaction:
    wait()

    print('\nAs you kneel before the altar, a mystical voice sounds in your head.')
    wait()

    print('\n\n')

    if less(integer(value 20), byte 40):
        print('"Thou hast much to learn about justice."')
        jump label_248
    fi

    if less(integer(value 20), byte 80):
        print('"Thy deeds have shown admirable justice."')

    else:
        print('"Thy deeds serve as an example to all."')
    fi

label_248:
    wait()

    print('\n\nDo you wish to meditate at this altar? ')

    choice('yn')

    case 'n':
        bye()
    esac

    if equals(integer(value 23), byte 0):
        integer(value 0) = byte 0
        jump label_437
    fi

label_318:
    integer(value 0) = byte 0
    integer(value 2) = byte 1
    print('\n')

label_333:
    look(character(integer(value 0), byte 0))
    print('#2. $Y\n')
    integer(value 0) = plus(integer(value 0), byte 1)
    integer(value 2) = plus(integer(value 2), byte 1)

    if lessOrEquals(integer(value 0), integer(value 23)):
        jump label_333
    fi

    print('"Who will meditate?" ')
    inputNumber(integer(value 0))

    if equals(integer(value 0), byte 0):
        print('\n')
        bye()
    fi

    integer(value 0) = minus(integer(value 0), byte 1)

    if greater(integer(value 0), integer(value 23)):
        jump label_318
    fi

label_437:
    print('"Speak the Mantra of Justice."\n')

    ask()
    print('\n"$Z... $Z..."')
    wait()

    print('\n\n"$Z... $Z..."')
    wait()

    print('\n\n"$Z... $Z..."')
    wait()

    print('\n')

    case 'beh':
        print('"Justice without force is impotent."')
        wait()

        print('\n\n"Force without justice is tyranny."')
        wait()

        jump label_641

    case '*':
        print('You receive no enlightenment.')
        wait()

        jump label_910
    esac

label_641:
    if equals(hasBit(byte 235, value 0), byte 0):
        increaseKarma(byte 10)
        setBit(byte 235, value 0)
    fi

    if and(and(and(and(and(and(and(hasBit(byte 192, value 0), hasBit(byte 193, value 0)), hasBit(byte 194, value 0)), hasBit(byte 195, value 0)), hasBit(byte 196, value 0)), hasBit(byte 197, value 0)), hasBit(byte 198, value 0)), hasBit(byte 199, value 0)):
        clearBit(byte 192, value 0)
        clearBit(byte 193, value 0)
        clearBit(byte 194, value 0)
        clearBit(byte 195, value 0)
        clearBit(byte 196, value 0)
        clearBit(byte 197, value 0)
        clearBit(byte 198, value 0)
        clearBit(byte 199, value 0)
        setBit(byte 235, value 0)
    fi

    integer(value 1) = character(integer(value 0), byte 0)
    integer(value 2) = level(integer(value 1), byte 0)

    if greater(integer(value 2), byte 7):
        jump label_910
    fi

    integer(value 3) = experience(integer(value 1), byte 0)

    if greaterOrEquals(integer(value 3), data(dword 1019, integer(value 2))):
        integer(value 2) = level(integer(value 1), byte 1)
        integer(value 4) = intelligence(integer(value 1), byte 1)
        integer(value 4) = dexterity(integer(value 1), byte 1)
        look(integer(value 1))
        print('\n\n$Y has gained a level...')
        wait()

        print('\n\nintelligence...')
        wait()

        print('\n\nand dexterity!')
        wait()
    fi

label_910:
    print('\n\n"There is naught else for you to learn here and now."')
    wait()

    print('\n\n"Return when thy journey has progressed further."\n')
    bye()

integers_1019 = [
    0,    // 0
    100,  // 1
    200,  // 2
    400,  // 3
    800,  // 4
    1600, // 5
    3200, // 6
    6400, // 7
]
