source("CONVERSE.B")
index(96)

id(195)
name("Justice")

description:
    print("the altar of Justice.")

    f3()

interaction:
    wait()

    print("\nAs you kneel before the altar, a mystical voice sounds in your head.")
    wait()

    print("\n\n")

    if less(integer(value 20), byte 40):
        print("\"Thou hast much to learn about justice.\"")
        jump 248

    endif

    if less(integer(value 20), byte 80):
        print("\"Thy deeds have shown admirable justice.\"")

    else:
        print("\"Thy deeds serve as an example to all.\"")

    endif

248:
    wait()

    print("\n\nDo you wish to meditate at this altar? ")

    askc("yn")

    // Wrong flow!
    case "n":
        bye()

    esac

    if equals(integer(value 23), byte 0):
        integer(value 0) = byte 0
        jump 437

    endif

318:
    integer(value 0) = byte 0
    integer(value 2) = byte 1
    print("\n")

333:
    ('SETNAME', ('character', [('integer', [('value', 0)]), ('byte', 0)]))
    print("#2. $Y\n")
    integer(value 0) = plus(integer(value 0), byte 1)
    integer(value 2) = plus(integer(value 2), byte 1)

    if lessOrEquals(integer(value 0), integer(value 23)):
        jump 333

    endif

    print("\"Who will meditate?\" ")
    ('INPUTNUM', 0)

    if equals(integer(value 0), byte 0):
        print("\n")
        bye()

    endif

    integer(value 0) = minus(integer(value 0), byte 1)

    if greater(integer(value 0), integer(value 23)):
        jump 318

    endif

437:
    print("\"Speak the Mantra of Justice.\"\n")

    ask()
    print("\n\"$Z... $Z...\"")
    wait()

    print("\n\n\"$Z... $Z...\"")
    wait()

    print("\n\n\"$Z... $Z...\"")
    wait()

    print("\n")

    // Wrong flow!
    case "beh":
        print("\"Justice without force is impotent.\"")
        wait()

        print("\n\n\"Force without justice is tyranny.\"")
        wait()

        jump 641

    case "*":
        print("You receive no enlightenment.")
        wait()

        jump 910

        // Unreachable code!

    esac

641:
    if equals(hasBit(byte 235, value 0), byte 0):
        ('ADD_KARMA', ('byte', 10))
        ('SETF', ('byte', 235), ('value', 0))

    endif

    if and(and(and(and(and(and(and(hasBit(byte 192, value 0), hasBit(byte 193, value 0)), hasBit(byte 194, value 0)), hasBit(byte 195, value 0)), hasBit(byte 196, value 0)), hasBit(byte 197, value 0)), hasBit(byte 198, value 0)), hasBit(byte 199, value 0)):
        ('CLEARF', ('byte', 192), ('value', 0))
        ('CLEARF', ('byte', 193), ('value', 0))
        ('CLEARF', ('byte', 194), ('value', 0))
        ('CLEARF', ('byte', 195), ('value', 0))
        ('CLEARF', ('byte', 196), ('value', 0))
        ('CLEARF', ('byte', 197), ('value', 0))
        ('CLEARF', ('byte', 198), ('value', 0))
        ('CLEARF', ('byte', 199), ('value', 0))
        ('SETF', ('byte', 235), ('value', 0))

    endif

    integer(value 1) = character(integer(value 0), byte 0)
    integer(value 2) = level(integer(value 1), byte 0)

    if greater(integer(value 2), byte 7):
        jump 910

    endif

    integer(value 3) = experience(integer(value 1), byte 0)

    if greaterOrEquals(integer(value 3), data(dword 1019, integer(value 2))):
        integer(value 2) = level(integer(value 1), byte 1)
        integer(value 4) = intelligence(integer(value 1), byte 1)
        integer(value 4) = dexterity(integer(value 1), byte 1)
        ('SETNAME', ('integer', [('value', 1)]))
        print("\n\n$Y has gained a level...")
        wait()

        print("\n\nintelligence...")
        wait()

        print("\n\nand dexterity!")
        wait()

    endif

910:
    print("\n\n\"There is naught else for you to learn here and now.\"")
    wait()

    print("\n\n\"Return when thy journey has progressed further.\"\n")
    bye()

    [['INTEGERS', [0, 100, 200, 400, 800, 1600, 3200, 6400]]]
